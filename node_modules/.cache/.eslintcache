[{"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/index.js":"1","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js":"2","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Login.js":"3","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/SignUp.js":"4","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationInfo.js":"5","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationUsers.js":"6","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/PersonalInfo.js":"7","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationSettings.js":"8","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Formations.js":"9","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationBar.js":"10","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationCard.js":"11","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/MyFormations.js":"12","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Home.js":"13","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Banner/Banner.js":"14","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Banner/UserNav.js":"15","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Banner/VisitorNav.js":"16","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Invitations.js":"17","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/NewFormation.js":"18","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/SearchCard.js":"19","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/InvitationCard.js":"20","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationUserCard.js":"21","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Requests.js":"22","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/RequestCard.js":"23","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/SearchUsers.js":"24"},{"size":261,"mtime":1665163017295,"results":"25","hashOfConfig":"26"},{"size":10216,"mtime":1665309410737,"results":"27","hashOfConfig":"26"},{"size":1038,"mtime":1664895771554,"results":"28","hashOfConfig":"26"},{"size":2327,"mtime":1665440113219,"results":"29","hashOfConfig":"26"},{"size":7314,"mtime":1665154574220,"results":"30","hashOfConfig":"26"},{"size":1887,"mtime":1664897467287,"results":"31","hashOfConfig":"26"},{"size":4183,"mtime":1665440495317,"results":"32","hashOfConfig":"26"},{"size":2454,"mtime":1665227977874,"results":"33","hashOfConfig":"26"},{"size":4960,"mtime":1665309826395,"results":"34","hashOfConfig":"26"},{"size":1145,"mtime":1665309857851,"results":"35","hashOfConfig":"26"},{"size":2286,"mtime":1664999121090,"results":"36","hashOfConfig":"26"},{"size":822,"mtime":1664897610760,"results":"37","hashOfConfig":"26"},{"size":680,"mtime":1665159409497,"results":"38","hashOfConfig":"26"},{"size":400,"mtime":1664636706382,"results":"39","hashOfConfig":"26"},{"size":966,"mtime":1665068959673,"results":"40","hashOfConfig":"26"},{"size":837,"mtime":1665069168074,"results":"41","hashOfConfig":"26"},{"size":838,"mtime":1664894756902,"results":"42","hashOfConfig":"26"},{"size":3968,"mtime":1665441104255,"results":"43","hashOfConfig":"26"},{"size":4692,"mtime":1665440825675,"results":"44","hashOfConfig":"26"},{"size":2917,"mtime":1665154298329,"results":"45","hashOfConfig":"26"},{"size":2686,"mtime":1665154376166,"results":"46","hashOfConfig":"26"},{"size":836,"mtime":1664894703170,"results":"47","hashOfConfig":"26"},{"size":1274,"mtime":1664897960787,"results":"48","hashOfConfig":"26"},{"size":673,"mtime":1664894439281,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1s8kplo",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"53"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"53"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"53"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"53"},"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/index.js",[],[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js",["130","131"],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Login.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/SignUp.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationInfo.js",["132"],[],"import React, { useState } from \"react\";\n\nfunction FormationInfo({ currentUser, formation, patchCurrentUser }) {\n\n    const [dobShared, setDobShared] = useState(formation.pronouns);\n    const [pronounsShared, setPronounsShared] = useState(formation.pronouns);\n    const [emailShared, setEmailShared] = useState(formation.email);\n    const [phoneShared, setPhoneShared] = useState(formation.phone);\n    const [addressShared, setAddressShared] = useState(formation.address);\n    const [notesShared, setNotesShared] = useState(formation.notes);\n\n    function handleInfoChange(e) {\n        const info = e.target.name;\n        switch(info) {\n            case \"dob\":\n                setDobShared(!dobShared);\n                formation[info] = !dobShared;\n                break;\n            case \"pronouns\":\n                setPronounsShared(!pronounsShared);\n                formation[info] = !pronounsShared;\n                break;\n            case \"email\":\n                setEmailShared(!emailShared);\n                formation[info] = !emailShared;\n                break;\n            case \"phone\":\n                setPhoneShared(!phoneShared);\n                formation[info] = !phoneShared;\n                break;\n            case \"address\":\n                setAddressShared(!addressShared);\n                formation[info] = !addressShared;\n                break;\n            case \"notes\":\n                setNotesShared(!notesShared);\n                formation[info] = !notesShared;\n                break;\n        }\n        const sansFormations = currentUser.formations.filter((el) => el.id !== formation.id);\n        const newFormationsObj = [...sansFormations, formation];\n        return patchCurrentUser({formations: newFormationsObj});\n    };\n\n    return (\n        <div className=\"display-body form-card\">\n            <h1>Shared Information for {formation.name}</h1>\n            <div>\n                <p><b>Date of Birth</b></p>\n                <div>\n                    <input\n                        type=\"radio\"\n                        id=\"dobshared\"\n                        name=\"dob\"\n                        value=\"shared\"\n                        checked={dobShared ? \"checked\" : \"\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"dobshared\">Shared</label>\n                    <input\n                        type=\"radio\"\n                        id=\"dobunshared\"\n                        name=\"dob\"\n                        value=\"unshared\"\n                        checked={dobShared ? \"\" : \"checked\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"dobunshared\">Unshared</label>\n                </div>\n            </div>\n            <div>\n                <p><b>Pronouns</b></p>\n                <div>\n                    <input\n                        type=\"radio\"\n                        id=\"pronounshared\"\n                        name=\"pronouns\"\n                        value=\"shared\"\n                        checked={pronounsShared ? \"checked\" : \"\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"pronounshared\">Shared</label>\n                    <input\n                        type=\"radio\"\n                        id=\"pronounsunshared\"\n                        name=\"pronouns\"\n                        value=\"unshared\"\n                        checked={pronounsShared ? \"\" : \"checked\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"pronounsunshared\">Unshared</label>\n                </div>\n            </div>\n            <div>\n                <p><b>Email</b></p>\n                <div>\n                    <input\n                        type=\"radio\"\n                        id=\"emailshared\"\n                        name=\"email\"\n                        value=\"shared\"\n                        checked={emailShared ? \"checked\" : \"\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"emailshared\">Shared</label>\n                    <input\n                        type=\"radio\"\n                        id=\"emailunshared\"\n                        name=\"email\"\n                        value=\"unshared\"\n                        checked={emailShared ? \"\" : \"checked\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"emailunshared\">Unshared</label>\n                </div>\n            </div>\n            <div>\n                <p><b>Phone</b></p>\n                <div>\n                    <input\n                        type=\"radio\"\n                        id=\"phoneshared\"\n                        name=\"phone\"\n                        value=\"shared\"\n                        checked={phoneShared ? \"checked\" : \"\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"phoneshared\">Shared</label>\n                    <input\n                        type=\"radio\"\n                        id=\"phoneunshared\"\n                        name=\"phone\"\n                        value=\"unshared\"\n                        checked={phoneShared ? \"\" : \"checked\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"phoneunshared\">Unshared</label>\n                </div>\n            </div>\n            <div>\n                <p><b>Address</b></p>\n                <div>\n                    <input\n                        type=\"radio\"\n                        id=\"addressshared\"\n                        name=\"address\"\n                        value=\"shared\"\n                        checked={addressShared ? \"checked\" : \"\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"addressshared\">Shared</label>\n                    <input\n                        type=\"radio\"\n                        id=\"addressunshared\"\n                        name=\"address\"\n                        value=\"unshared\"\n                        checked={addressShared ? \"\" : \"checked\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"addressunshared\">Unshared</label>\n                </div>\n            </div>\n            <div>\n                <p><b>Notes</b></p>\n                <div>\n                    <input\n                        type=\"radio\"\n                        id=\"notesshared\"\n                        name=\"notes\"\n                        value=\"shared\"\n                        checked={notesShared ? \"checked\" : \"\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"notesshared\">Shared</label>\n                    <input\n                        type=\"radio\"\n                        id=\"notesunshared\"\n                        name=\"notes\"\n                        value=\"unshared\"\n                        checked={notesShared ? \"\" : \"checked\"}\n                        onChange={handleInfoChange}\n                    />\n                    <label htmlFor=\"notesunshared\">Unshared</label>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FormationInfo;","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationUsers.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/PersonalInfo.js",["133"],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationSettings.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Formations.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationBar.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationCard.js",["134","135"],[],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction FormationCard({ currentUser, formation, userData, leaveFormation }) {\n\n    function handleLeaveFormation() {\n        return leaveFormation(formation);\n    };\n\n    if (currentUser.id === formation.admin) {\n        return (\n            <div className=\"formation-card\" style={{ background: `${formation.color}` }}>\n                <img className=\"formation-image\" src={formation.image} alt={`${formation.name} picture`} style={{ background: \"rgb(200, 200, 200)\" }} />\n                <div className=\"inset-card\">\n                    <h2>{formation.name}</h2>\n                    <div className=\"formation-buttons\">\n                        <NavLink className=\"navlink\" to={`/formations/${formation.id}/users`}>Users</NavLink>\n                        <NavLink className=\"navlink\" to={`/formations/${formation.id}/info`}>Shared Information</NavLink>\n                        <NavLink className=\"navlink\" to={`/formations/${formation.id}/settings`}>Settings</NavLink>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n\n        const owner = userData.find((el) => el.id === formation.admin);\n        const ownerCopyFormation = owner.formations.find((el) => el.id === formation.id);\n\n        return (\n            <div className=\"formation-card\" style={{ background: `${ownerCopyFormation.color}` }}>\n                <img className=\"formation-image\" src={ownerCopyFormation.image} alt={`${ownerCopyFormation.name} picture`} style={{ background: \"rgb(200, 200, 200)\" }} />\n                <div className=\"inset-card\">\n                    <h2>{ownerCopyFormation.name}</h2>\n                    <h3>Owned by: {owner.name} ({owner.token.username})</h3>\n                    <div className=\"formation-buttons\">\n                        <NavLink className=\"navlink\" to={`/formations/${formation.id}/users`}>Owner Info</NavLink>\n                        <NavLink className=\"navlink\" to={`/formations/${formation.id}/info`}>Shared Information</NavLink>\n                        <button className=\"navlink\" onClick={handleLeaveFormation}>Leave Formation</button>\n                    </div>\n                </div>\n            </div>\n        );\n        }\n};\n\nexport default FormationCard;","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/MyFormations.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Home.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Banner/Banner.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Banner/UserNav.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Banner/VisitorNav.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Invitations.js",["136"],[],"import React from \"react\";\nimport InvitationCard from \"./InvitationCard\";\n\nfunction Invitations({ currentUser, rejectInvitation, acceptInvitation }) {\n\n    if (currentUser.invitations.length == 0) {\n        return (\n            <div className=\"display-container\">\n                 <h3>No invitations at this time.</h3>\n            </div>\n        );\n    } else {\n        const invitationDisplay = currentUser.invitations.map((el) => <InvitationCard\n            key={`${currentUser.id}${el.id}`}\n            invitation={el}\n            rejectInvitation={rejectInvitation}\n            acceptInvitation={acceptInvitation}\n            currentUser={currentUser}\n        />);\n\n        return (\n            <div className=\"display-container\">\n                {invitationDisplay}\n            </div>\n        );\n    }\n};\n\nexport default Invitations;","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/NewFormation.js",["137","138"],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/SearchCard.js",["139","140","141","142","143","144","145","146"],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/InvitationCard.js",["147"],[],"import React, {useState} from \"react\";\n\nfunction InvitationCard({ invitation, acceptInvitation, rejectInvitation }) {\n\n    const [dob, setDob] = useState(false);\n    const [pronouns, setPronouns] = useState(false);\n    const [email, setEmail] = useState(false);\n    const [phone, setPhone] = useState(false);\n    const [address, setAddress] = useState(false);\n    const [notes, setNotes] = useState(false);\n\n    function handleAccept() {\n        const newFormationObj = {\n            name: invitation.name,\n            color: invitation.color,\n            image: invitation.image,\n            id: invitation.id,\n            owner: invitation.owner,\n            admin: invitation.admin,\n            dob: dob,\n            pronouns: pronouns,\n            email: email,\n            phone: phone,\n            address: address,\n            notes: notes\n        };\n        return acceptInvitation(newFormationObj);\n    };\n\n    function handleReject() {\n        return rejectInvitation(invitation.id);\n    };\n\n    return (\n        <div className=\"formation-card\" style={{ background: `${invitation.color}` }}>\n            <img className=\"formation-image\" src={invitation.image} alt={`${invitation.name} picture`} style={{ background: \"rgb(174, 174, 174)\" }} />\n            <div className=\"form-card\">\n                <h2>You've been invited to join {invitation.name}</h2>\n                <h3>Owner: {invitation.owner}</h3>\n                <div>\n                    <h3>What information would you like to share with the owner of this formation?</h3>\n                    <div>\n                        <p><b>Date of Birth</b></p>\n                        <input onChange={e => setDob(!dob)} type=\"checkbox\" />\n                    </div>\n                    <div>\n                        <p><b>Pronouns</b></p>\n                        <input onChange={e => setPronouns(!pronouns)} type=\"checkbox\" />\n                    </div>\n                    <div>\n                        <p><b>Email</b></p>\n                        <input onChange={e => setEmail(!email)} type=\"checkbox\" />\n                    </div>\n                    <div>\n                        <p><b>Phone</b></p>\n                        <input onChange={e => setPhone(!phone)} type=\"checkbox\" />\n                    </div>\n                    <div>\n                        <p><b>Address</b></p>\n                        <input onChange={e => setAddress(!address)} type=\"checkbox\" />\n                    </div>\n                    <div>\n                        <p><b>Notes</b></p>\n                        <input onChange={e => setNotes(!notes)} type=\"checkbox\" />\n                    </div>\n                </div>\n                <div>\n                    <button onClick={handleAccept}>Accept</button>\n                    <button onClick={handleReject}>Reject</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InvitationCard;","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationUserCard.js",["148","149"],[],"import React from \"react\";\n\nfunction FormationUserCard({ currentUser, user, formation, patchCurrentUser, patchUser }) {\n\n    const userFormation = user.formations.find((el) => el.id === formation.id);\n\n    const informationDisplay = [];\n\n    if (userFormation.dob) {\n        informationDisplay.push(<p key={`${user.token.username}dob`}><b>Date of Birth:</b> {user.dob}</p>)\n    }\n    if (userFormation.pronouns) {\n        informationDisplay.push(<p key={`${user.token.username}pronouns`}><b>Pronouns:</b> {user.pronouns}</p>)\n    }\n    if (userFormation.email) {\n        informationDisplay.push(<p key={`${user.token.username}email`}><b>Email:</b> {user.email}</p>)\n    }\n    if (userFormation.phone) {\n        informationDisplay.push(<p key={`${user.token.username}phone`}><b>Phone:</b> {user.phone}</p>)\n    }\n    if (userFormation.address) {\n        informationDisplay.push(<p key={`${user.token.username}address`}><b>Address:</b> {user.address}</p>)\n    }\n    if (userFormation.notes) {\n        informationDisplay.push(<p key={`${user.token.username}notes`}><b>Notes:</b> {user.notes}</p>)\n    }\n\n    function handleRemoveUser(e) {\n        const sansCurrentUserFormationsArr = currentUser.formations.filter((el) => el.id !== formation.id);\n        const sansCurrentFormationArr = formation.users.filter((el) => el !== user.id);\n        formation.users = sansCurrentFormationArr;\n        const newCurrentUserFormationsArr = [...sansCurrentUserFormationsArr, formation];\n        return patchCurrentUser({formations: newCurrentUserFormationsArr})\n        .then(() => {\n            const sansUserFormationsArr = user.formations.filter((el) => el.id !== formation.id);\n            patchUser(user.id, {formations: sansUserFormationsArr});\n        });\n    };\n\n    if (currentUser.id === formation.admin) {\n        return (\n            <div className=\"user-card\">\n                <img className=\"user-image\" src={user.pic} alt={`${user.token.username} picture`} />\n                <div className=\"userinfo inset-card\">\n                    <h3>{user.name}</h3>\n                    {informationDisplay}\n                    <div>\n                        <button onClick={handleRemoveUser}>Remove User</button>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"user-card\">\n                <img className=\"user-image\" src={user.pic} alt={`${user.token.username} picture`} />\n                <div className=\"userinfo inset-card\">\n                    <h3>{user.name}</h3>\n                    {informationDisplay}\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default FormationUserCard;","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Requests.js",["150"],[],"import React from \"react\";\nimport RequestCard from \"./RequestCard\";\n\n\nfunction Requests({ currentUser, userData, acceptRequest, rejectRequest }) {\n    \n    if (currentUser.requests.length == 0) {\n        return (\n            <div className=\"display-container\">\n                <h3>No requests at this time.</h3>\n            </div>\n        );\n    } else {\n\n        const requestDisplay = currentUser.requests.map((el) =>\n        <RequestCard\n            key={`${el.id}request`}\n            currentUser={currentUser}\n            request={el}\n            userData={userData}\n            acceptRequest={acceptRequest}\n            rejectRequest={rejectRequest}\n        />);\n\n        return (\n            <div className=\"display-container\">\n                {requestDisplay}\n            </div>\n        );\n    }    \n};\n\nexport default Requests;","/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/RequestCard.js",[],[],"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/SearchUsers.js",["151"],[],"import React from \"react\";\nimport SearchCard from \"./SearchCard\";\n\nfunction SearchUsers({ currentUser, userData, sendInvite, sendRequest }) {\n\n    const userDisplay = userData.map((el) => {\n        if (el.id !== currentUser.id) {\n            return <SearchCard\n                key={`${el.token.username}searchcard`}\n                currentUser={currentUser}\n                user={el}\n                sendInvite={sendInvite}\n                sendRequest={sendRequest}\n            />\n        } else {\n            return;\n        }\n    });\n\n    return (\n        <div className=\"display-container\">\n            {userDisplay}\n        </div>\n    );\n};\n\nexport default SearchUsers;",{"ruleId":"152","severity":1,"message":"153","line":19,"column":33,"nodeType":"154","endLine":19,"endColumn":35,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"156","line":36,"column":8,"nodeType":"154","endLine":36,"endColumn":15,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":14,"column":9,"nodeType":"160","messageId":"161","endLine":39,"endColumn":10},{"ruleId":"162","severity":1,"message":"163","line":35,"column":21,"nodeType":"164","endLine":35,"endColumn":109},{"ruleId":"162","severity":1,"message":"163","line":13,"column":17,"nodeType":"164","endLine":13,"endColumn":153},{"ruleId":"162","severity":1,"message":"163","line":31,"column":17,"nodeType":"164","endLine":31,"endColumn":171},{"ruleId":"165","severity":1,"message":"166","line":6,"column":40,"nodeType":"167","messageId":"168","endLine":6,"endColumn":42},{"ruleId":"169","severity":1,"message":"170","line":15,"column":28,"nodeType":"171","messageId":"172","endLine":15,"endColumn":45},{"ruleId":"173","severity":2,"message":"174","line":53,"column":116,"nodeType":"171","messageId":"175","endLine":53,"endColumn":131},{"ruleId":"165","severity":1,"message":"166","line":10,"column":77,"nodeType":"167","messageId":"168","endLine":10,"endColumn":79},{"ruleId":"165","severity":1,"message":"166","line":16,"column":70,"nodeType":"167","messageId":"168","endLine":16,"endColumn":72},{"ruleId":"176","severity":1,"message":"177","line":20,"column":60,"nodeType":"178","messageId":"179","endLine":20,"endColumn":62},{"ruleId":"176","severity":1,"message":"177","line":26,"column":54,"nodeType":"178","messageId":"179","endLine":26,"endColumn":56},{"ruleId":"162","severity":1,"message":"163","line":42,"column":17,"nodeType":"164","endLine":42,"endColumn":101},{"ruleId":"162","severity":1,"message":"163","line":68,"column":17,"nodeType":"164","endLine":68,"endColumn":101},{"ruleId":"162","severity":1,"message":"163","line":87,"column":17,"nodeType":"164","endLine":87,"endColumn":101},{"ruleId":"162","severity":1,"message":"163","line":106,"column":17,"nodeType":"164","endLine":106,"endColumn":101},{"ruleId":"162","severity":1,"message":"163","line":36,"column":13,"nodeType":"164","endLine":36,"endColumn":151},{"ruleId":"162","severity":1,"message":"163","line":43,"column":17,"nodeType":"164","endLine":43,"endColumn":101},{"ruleId":"162","severity":1,"message":"163","line":56,"column":17,"nodeType":"164","endLine":56,"endColumn":101},{"ruleId":"165","severity":1,"message":"166","line":7,"column":37,"nodeType":"167","messageId":"168","endLine":7,"endColumn":39},{"ruleId":"176","severity":1,"message":"180","line":16,"column":13,"nodeType":"181","messageId":"182","endLine":16,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadInit'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has missing dependencies: 'currentUser' and 'removeInvalidFormations'. Either include them or remove the dependency array.",["184"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setFormationImage' is assigned a value but never used.","Identifier","unusedVar","no-undef","'setFormationPic' is not defined.","undef","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [loadInit]",{"range":"189","text":"190"},"Update the dependencies array to be: [currentUser, removeInvalidFormations, token]",{"range":"191","text":"192"},[649,651],"[loadInit]",[1098,1105],"[currentUser, removeInvalidFormations, token]"]