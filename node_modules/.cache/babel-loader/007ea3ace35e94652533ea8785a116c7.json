{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Formations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport MyFormations from \"./MyFormations.js\";\nimport NewFormation from \"./NewFormation.js\";\nimport FormationBar from \"./FormationBar.js\";\nimport Invitations from \"./Invitations.js\";\nimport FormationRequests from \"./FormationRequests.js\";\nimport FormationUsers from \"./FormationUsers.js\";\nimport FormationInfo from \"./FormationInfo.js\";\nimport FormationSettings from \"./FormationSettings.js\";\nimport Users from \"./Users.js\";\nimport AllFormations from \"./AllFormations.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Formations(_ref) {\n  _s();\n\n  let {\n    token,\n    currentUser,\n    patchCurrentUser,\n    updateCurrentUser,\n    userData,\n    updateUserData\n  } = _ref;\n  const [searchValue, setSearchValue] = useState(\"\");\n  const history = useHistory();\n\n  if (token === \"valid\") {\n    const formationIds = currentUser.formations.map(formation => formation.id);\n    const formationUsers = formationIds.map(id => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${id}/users`,\n        children: /*#__PURE__*/_jsxDEV(FormationUsers, {\n          currentUser: currentUser,\n          userData: userData,\n          formationId: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, `${id}users`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    });\n    const formationInfo = formationIds.map(id => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${id}/info`,\n        children: /*#__PURE__*/_jsxDEV(FormationInfo, {\n          currentUser: currentUser,\n          formationId: id,\n          token: token,\n          patchCurrentUser: patchCurrentUser,\n          updateCurrentUser: updateCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, `${id}info`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    });\n    const formationSettings = formationIds.map(id => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${id}/settings`,\n        children: /*#__PURE__*/_jsxDEV(FormationSettings, {\n          currentUser: currentUser,\n          formationId: id,\n          patchCurrentUser: patchCurrentUser,\n          updateCurrentUser: updateCurrentUser,\n          userData: userData,\n          updateUserData: updateUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, `${id}settings`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    });\n    const formationRequests = formationIds.map(id => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${id}/requests`,\n        children: /*#__PURE__*/_jsxDEV(FormationRequests, {\n          currentUser: currentUser,\n          formationId: id,\n          patchCurrentUser: patchCurrentUser,\n          updateCurrentUser: updateCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, `${id}requests`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    });\n\n    function getSearchValue(mode, value) {\n      setSearchValue(value);\n\n      if (mode === \"formation\") {\n        return history.push(\"/formations\");\n      } else if (mode === \"user\") {\n        return history.push(\"/formations/users\");\n      }\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Formations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormationBar, {\n        getSearchValue: getSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/invitations\",\n          children: /*#__PURE__*/_jsxDEV(Invitations, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/newformation\",\n          children: /*#__PURE__*/_jsxDEV(NewFormation, {\n            currentUser: currentUser,\n            patchCurrentUser: patchCurrentUser,\n            updateCurrentUser: updateCurrentUser,\n            userData: userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/users\",\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            userData: userData,\n            currentUser: currentUser,\n            searchValue: searchValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/allformations\",\n          children: /*#__PURE__*/_jsxDEV(AllFormations, {\n            userData: userData,\n            currentUser: currentUser,\n            searchValue: searchValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), formationUsers, formationInfo, formationRequests, formationSettings, /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations\",\n          children: /*#__PURE__*/_jsxDEV(MyFormations, {\n            currentUser: currentUser,\n            searchValue: searchValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  } else if (token === \"invalid\") {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Formations, \"mzSH3jUo/0O8IfuPeNJvJKpEIKg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Formations;\n;\nexport default Formations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formations\");","map":{"version":3,"names":["React","useState","Redirect","Route","Switch","useHistory","MyFormations","NewFormation","FormationBar","Invitations","FormationRequests","FormationUsers","FormationInfo","FormationSettings","Users","AllFormations","Formations","token","currentUser","patchCurrentUser","updateCurrentUser","userData","updateUserData","searchValue","setSearchValue","history","formationIds","formations","map","formation","id","formationUsers","formationInfo","formationSettings","formationRequests","getSearchValue","mode","value","push"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Formations.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport MyFormations from \"./MyFormations.js\";\nimport NewFormation from \"./NewFormation.js\";\nimport FormationBar from \"./FormationBar.js\";\nimport Invitations from \"./Invitations.js\";\nimport FormationRequests from \"./FormationRequests.js\";\nimport FormationUsers from \"./FormationUsers.js\";\nimport FormationInfo from \"./FormationInfo.js\";\nimport FormationSettings from \"./FormationSettings.js\";\nimport Users from \"./Users.js\";\nimport AllFormations from \"./AllFormations.js\";\n\nfunction Formations({ token, currentUser, patchCurrentUser, updateCurrentUser, userData, updateUserData }) {\n\n    const [searchValue, setSearchValue] = useState(\"\");\n    \n    const history = useHistory();\n\n    if (token === \"valid\") {\n        const formationIds = currentUser.formations.map((formation) => formation.id);\n\n        const formationUsers = formationIds.map((id) => {\n            return (\n                <Route key={`${id}users`} path={`/formations/${id}/users`}>\n                    <FormationUsers currentUser={currentUser} userData={userData} formationId={id} />\n                </Route> \n            );\n        });\n\n        const formationInfo = formationIds.map((id) => {\n            return (\n                <Route key={`${id}info`} path={`/formations/${id}/info`}>\n                    <FormationInfo currentUser={currentUser} formationId={id} token={token} patchCurrentUser={patchCurrentUser} updateCurrentUser={updateCurrentUser} />\n                </Route> \n            );\n        });\n\n        const formationSettings = formationIds.map((id) => {\n            return (\n                <Route key={`${id}settings`} path={`/formations/${id}/settings`}>\n                    <FormationSettings currentUser={currentUser} formationId={id} patchCurrentUser={patchCurrentUser} updateCurrentUser={updateCurrentUser} userData={userData} updateUserData={updateUserData} />\n                </Route> \n            );\n        });\n\n        const formationRequests = formationIds.map((id) => {\n            return (\n                <Route key={`${id}requests`} path={`/formations/${id}/requests`}>\n                    <FormationRequests currentUser={currentUser} formationId={id} patchCurrentUser={patchCurrentUser} updateCurrentUser={updateCurrentUser} />\n                </Route> \n            );\n        });\n\n        function getSearchValue(mode, value) {\n            setSearchValue(value);\n            if (mode === \"formation\") {\n                return history.push(\"/formations\");\n            } else if (mode === \"user\") {\n                return history.push(\"/formations/users\")\n            }\n        };\n    \n        return (\n            <div className=\"display-container\">\n                <h1>Formations</h1>\n                <FormationBar getSearchValue={getSearchValue} />\n                <Switch>\n                    <Route path=\"/formations/invitations\">\n                        <Invitations />\n                    </Route>\n                    <Route path=\"/formations/newformation\">\n                        <NewFormation currentUser={currentUser} patchCurrentUser={patchCurrentUser} updateCurrentUser={updateCurrentUser} userData={userData} />\n                    </Route>\n                    <Route path=\"/formations/users\">\n                        <Users\n                            userData={userData}\n                            currentUser={currentUser}\n                            searchValue={searchValue}\n                        />\n                    </Route>\n                    <Route path=\"/formations/allformations\">\n                        <AllFormations\n                            userData={userData}\n                            currentUser={currentUser}\n                            searchValue={searchValue}\n                        />\n                    </Route>\n                    {formationUsers}\n                    {formationInfo}\n                    {formationRequests}\n                    {formationSettings}\n                    <Route path=\"/formations\">\n                        <MyFormations\n                            currentUser={currentUser}\n                            searchValue={searchValue}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    } else if (token === \"invalid\") {\n        return <Redirect to=\"/login\" />;\n    } else {\n        return <h1>Loading...</h1>;\n    }};\n\nexport default Formations;"],"mappings":"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"},"metadata":{},"sourceType":"module"}