{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationUsers.js\";\nimport React from \"react\";\nimport UserCard from \"./FormationUserCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormationUsers(_ref) {\n  let {\n    currentUser,\n    userData,\n    formation,\n    patchCurrentUser\n  } = _ref;\n  const formationUserArr = userData.filter(user => formation.users.includes(user.id));\n  const formationOwnerArr = userData.filter(user => user.id === formation.admin);\n  const formationOwner = formationOwnerArr[0];\n  const displayUserCards = formationUserArr.map(user => {\n    return /*#__PURE__*/_jsxDEV(UserCard, {\n      user: user,\n      formation: formation,\n      currentUser: currentUser,\n      patchCurrentUser: patchCurrentUser\n    }, `${user.token.username}card`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  });\n\n  const displayOwnerCard = /*#__PURE__*/_jsxDEV(UserCard, {\n    user: formationOwner,\n    formation: formation,\n    currentUser: currentUser,\n    patchCurrentUser: patchCurrentUser\n  }, `${formationOwner.token.username}card`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 30\n  }, this);\n\n  if (currentUser.id === formation.admin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"formation-array-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Users in \", formation.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), displayUserCards]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"formation-array-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Owner of \", formation.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), displayOwnerCard]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = FormationUsers;\n;\nexport default FormationUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormationUsers\");","map":{"version":3,"names":["React","UserCard","FormationUsers","currentUser","userData","formation","patchCurrentUser","formationUserArr","filter","user","users","includes","id","formationOwnerArr","admin","formationOwner","displayUserCards","map","token","username","displayOwnerCard","name"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationUsers.js"],"sourcesContent":["import React from \"react\";\nimport UserCard from \"./FormationUserCard\";\n\nfunction FormationUsers({ currentUser, userData, formation, patchCurrentUser }) {\n    const formationUserArr = userData.filter((user) => formation.users.includes(user.id));\n\n    const formationOwnerArr = userData.filter((user) => user.id === formation.admin);\n\n    const formationOwner = formationOwnerArr[0];\n    \n    const displayUserCards = formationUserArr.map((user) => {\n        return <UserCard\n            key={`${user.token.username}card`}\n            user={user}\n            formation={formation}\n            currentUser={currentUser}\n            patchCurrentUser={patchCurrentUser}\n        />;\n    });\n\n    const displayOwnerCard = <UserCard key={`${formationOwner.token.username}card`} user={formationOwner} formation={formation} currentUser={currentUser} patchCurrentUser={patchCurrentUser} />;\n\n    if (currentUser.id === formation.admin) {\n        return (\n            <div id=\"formation-array-container\">\n                <h1>Users in {formation.name}</h1>\n                {displayUserCards}\n            </div>\n        );\n    } else {\n        return (\n            <div id=\"formation-array-container\">\n                <h1>Owner of {formation.name}</h1>\n                {displayOwnerCard}\n            </div>\n        );\n    } \n};\n\nexport default FormationUsers;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,SAASC,cAAT,OAAgF;EAAA,IAAxD;IAAEC,WAAF;IAAeC,QAAf;IAAyBC,SAAzB;IAAoCC;EAApC,CAAwD;EAC5E,MAAMC,gBAAgB,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,IAAD,IAAUJ,SAAS,CAACK,KAAV,CAAgBC,QAAhB,CAAyBF,IAAI,CAACG,EAA9B,CAA1B,CAAzB;EAEA,MAAMC,iBAAiB,GAAGT,QAAQ,CAACI,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,SAAS,CAACS,KAAhD,CAA1B;EAEA,MAAMC,cAAc,GAAGF,iBAAiB,CAAC,CAAD,CAAxC;EAEA,MAAMG,gBAAgB,GAAGT,gBAAgB,CAACU,GAAjB,CAAsBR,IAAD,IAAU;IACpD,oBAAO,QAAC,QAAD;MAEH,IAAI,EAAEA,IAFH;MAGH,SAAS,EAAEJ,SAHR;MAIH,WAAW,EAAEF,WAJV;MAKH,gBAAgB,EAAEG;IALf,GACG,GAAEG,IAAI,CAACS,KAAL,CAAWC,QAAS,MADzB;MAAA;MAAA;MAAA;IAAA,QAAP;EAOH,CARwB,CAAzB;;EAUA,MAAMC,gBAAgB,gBAAG,QAAC,QAAD;IAAuD,IAAI,EAAEL,cAA7D;IAA6E,SAAS,EAAEV,SAAxF;IAAmG,WAAW,EAAEF,WAAhH;IAA6H,gBAAgB,EAAEG;EAA/I,GAAgB,GAAES,cAAc,CAACG,KAAf,CAAqBC,QAAS,MAAhD;IAAA;IAAA;IAAA;EAAA,QAAzB;;EAEA,IAAIhB,WAAW,CAACS,EAAZ,KAAmBP,SAAS,CAACS,KAAjC,EAAwC;IACpC,oBACI;MAAK,EAAE,EAAC,2BAAR;MAAA,wBACI;QAAA,wBAAcT,SAAS,CAACgB,IAAxB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKL,gBAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH,CAPD,MAOO;IACH,oBACI;MAAK,EAAE,EAAC,2BAAR;MAAA,wBACI;QAAA,wBAAcX,SAAS,CAACgB,IAAxB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKD,gBAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;AACJ;;KAlCQlB,c;AAkCR;AAED,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}