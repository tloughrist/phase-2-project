{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationUsers.js\";\nimport React from \"react\";\nimport UserCard from \"./UserCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormationUsers(_ref) {\n  let {\n    currentUser,\n    userData,\n    formation,\n    patchCurrentUser\n  } = _ref;\n  const formationUserArr = userData.filter(user => formation.users.includes(user.id));\n  const formationOwnerArr = userData.filter(user => user.id === formation.admin);\n  const formationOwnerObj = formationOwnerArr[0];\n  const displayUserCards = formationUserArr.map(user => {\n    return /*#__PURE__*/_jsxDEV(UserCard, {\n      user: user,\n      formationId: formationId,\n      currentUser: currentUser,\n      currentFormation: currentFormation,\n      patchCurrentUser: patchCurrentUser\n    }, `${user.token.username}card`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  });\n\n  const displayOwnerCard = /*#__PURE__*/_jsxDEV(UserCard, {\n    user: formationOwnerObj,\n    formationId: formationId,\n    currentUser: currentUser,\n    currentFormation: currentFormation,\n    patchCurrentUser: patchCurrentUser\n  }, `${formationOwnerObj.token.username}card`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 30\n  }, this);\n\n  if (currentUser.id === currentFormation.admin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"formation-array-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Users in \", currentFormation.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), displayUserCards]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"formation-array-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Owner of \", currentFormation.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), displayOwnerCard]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = FormationUsers;\n;\nexport default FormationUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormationUsers\");","map":{"version":3,"names":["React","UserCard","FormationUsers","currentUser","userData","formation","patchCurrentUser","formationUserArr","filter","user","users","includes","id","formationOwnerArr","admin","formationOwnerObj","displayUserCards","map","formationId","currentFormation","token","username","displayOwnerCard","name"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationUsers.js"],"sourcesContent":["import React from \"react\";\nimport UserCard from \"./UserCard\";\n\nfunction FormationUsers({ currentUser, userData, formation, patchCurrentUser }) {\n    const formationUserArr = userData.filter((user) => formation.users.includes(user.id));\n\n    const formationOwnerArr = userData.filter((user) => user.id === formation.admin);\n\n    const formationOwnerObj = formationOwnerArr[0];\n    \n    const displayUserCards = formationUserArr.map((user) => {\n        return <UserCard key={`${user.token.username}card`} user={user} formationId={formationId} currentUser={currentUser} currentFormation={currentFormation} patchCurrentUser={patchCurrentUser} />\n    });\n\n    const displayOwnerCard = <UserCard key={`${formationOwnerObj.token.username}card`} user={formationOwnerObj} formationId={formationId} currentUser={currentUser} currentFormation={currentFormation} patchCurrentUser={patchCurrentUser} />;\n\n    if (currentUser.id === currentFormation.admin) {\n        return (\n            <div id=\"formation-array-container\">\n                <h1>Users in {currentFormation.name}</h1>\n                {displayUserCards}\n            </div>\n        );\n    } else {\n        return (\n            <div id=\"formation-array-container\">\n                <h1>Owner of {currentFormation.name}</h1>\n                {displayOwnerCard}\n            </div>\n        );\n    } \n};\n\nexport default FormationUsers;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,cAAT,OAAgF;EAAA,IAAxD;IAAEC,WAAF;IAAeC,QAAf;IAAyBC,SAAzB;IAAoCC;EAApC,CAAwD;EAC5E,MAAMC,gBAAgB,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,IAAD,IAAUJ,SAAS,CAACK,KAAV,CAAgBC,QAAhB,CAAyBF,IAAI,CAACG,EAA9B,CAA1B,CAAzB;EAEA,MAAMC,iBAAiB,GAAGT,QAAQ,CAACI,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,SAAS,CAACS,KAAhD,CAA1B;EAEA,MAAMC,iBAAiB,GAAGF,iBAAiB,CAAC,CAAD,CAA3C;EAEA,MAAMG,gBAAgB,GAAGT,gBAAgB,CAACU,GAAjB,CAAsBR,IAAD,IAAU;IACpD,oBAAO,QAAC,QAAD;MAA6C,IAAI,EAAEA,IAAnD;MAAyD,WAAW,EAAES,WAAtE;MAAmF,WAAW,EAAEf,WAAhG;MAA6G,gBAAgB,EAAEgB,gBAA/H;MAAiJ,gBAAgB,EAAEb;IAAnK,GAAgB,GAAEG,IAAI,CAACW,KAAL,CAAWC,QAAS,MAAtC;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFwB,CAAzB;;EAIA,MAAMC,gBAAgB,gBAAG,QAAC,QAAD;IAA0D,IAAI,EAAEP,iBAAhE;IAAmF,WAAW,EAAEG,WAAhG;IAA6G,WAAW,EAAEf,WAA1H;IAAuI,gBAAgB,EAAEgB,gBAAzJ;IAA2K,gBAAgB,EAAEb;EAA7L,GAAgB,GAAES,iBAAiB,CAACK,KAAlB,CAAwBC,QAAS,MAAnD;IAAA;IAAA;IAAA;EAAA,QAAzB;;EAEA,IAAIlB,WAAW,CAACS,EAAZ,KAAmBO,gBAAgB,CAACL,KAAxC,EAA+C;IAC3C,oBACI;MAAK,EAAE,EAAC,2BAAR;MAAA,wBACI;QAAA,wBAAcK,gBAAgB,CAACI,IAA/B;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKP,gBAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH,CAPD,MAOO;IACH,oBACI;MAAK,EAAE,EAAC,2BAAR;MAAA,wBACI;QAAA,wBAAcG,gBAAgB,CAACI,IAA/B;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKD,gBAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;AACJ;;KA5BQpB,c;AA4BR;AAED,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}