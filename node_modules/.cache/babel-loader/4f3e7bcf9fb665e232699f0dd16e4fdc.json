{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/NewFormation.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewFormation(_ref) {\n  let {\n    currentUser,\n    patchUser,\n    updateCurrentUser,\n    userData\n  } = _ref;\n\n  function handleFormationCreation(e) {\n    e.preventDefault();\n    const formationIdArr = [];\n    userData.forEach(user => {\n      return user.formations.forEach(formation => {\n        return formationIdArr.push(formation.uniqueid);\n      });\n    });\n    console.log(formationIdArr);\n    let uniqueId = Math.random() + Math.random();\n\n    while (formationIdArr.includes(uniqueId)) {\n      uniqueId = Math.random() + Math.random();\n    }\n\n    ;\n    const newFormationObj = {\n      name: e.target.name.value,\n      accesscode: e.target.accesscode.value,\n      color: e.target.color.value,\n      image: e.target.image.value,\n      uniqueid: uniqueId\n    };\n    const formationsArr = [...currentUser.formations, newFormationObj];\n    return patchUser(currentUser.id, {\n      formations: formationsArr\n    }).then(response => response.json()).then(data => updateCurrentUser(data)).then(() => e.target.reset()).then(() => alert(\"New Formation Created\"));\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"formation-array-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Formation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"newformation-form\",\n      onSubmit: handleFormationCreation,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"formation name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"accesscode\",\n        type: \"text\",\n        placeholder: \"set access code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"color\",\n        children: \"Select Formation Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"color\",\n        type: \"color\",\n        defaultValue: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"image\",\n        type: \"url\",\n        placeholder: \"image url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = NewFormation;\n;\nexport default NewFormation;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFormation\");","map":{"version":3,"names":["React","NewFormation","currentUser","patchUser","updateCurrentUser","userData","handleFormationCreation","e","preventDefault","formationIdArr","forEach","user","formations","formation","push","uniqueid","console","log","uniqueId","Math","random","includes","newFormationObj","name","target","value","accesscode","color","image","formationsArr","id","then","response","json","data","reset","alert"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/NewFormation.js"],"sourcesContent":["import React from \"react\";\n\n\nfunction NewFormation({ currentUser, patchUser, updateCurrentUser,\n    userData }) {\n\n    function handleFormationCreation(e) {\n        e.preventDefault();\n        const formationIdArr = [];\n        userData.forEach((user) => {\n            return user.formations.forEach((formation) => {\n                return formationIdArr.push(formation.uniqueid);\n            });\n        });\n        console.log(formationIdArr)\n        let uniqueId = (Math.random() + Math.random());\n        while(formationIdArr.includes(uniqueId)) {\n            uniqueId = (Math.random() + Math.random());\n        };\n        const newFormationObj = {\n            name: e.target.name.value,\n            accesscode: e.target.accesscode.value,\n            color: e.target.color.value,\n            image: e.target.image.value,\n            uniqueid: uniqueId\n        };\n        const formationsArr = [...currentUser.formations, newFormationObj];\n        return patchUser(currentUser.id, {formations: formationsArr})\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data))\n        .then(() => e.target.reset())\n        .then(() => alert(\"New Formation Created\"));\n    };\n\n    return (\n        <div id=\"formation-array-container\">\n            <h1>New Formation</h1>\n            <form id=\"newformation-form\" onSubmit={handleFormationCreation}>\n                <input name=\"name\" type=\"text\" placeholder=\"formation name\" />\n                <input name=\"accesscode\" type=\"text\" placeholder=\"set access code\" />\n                <label htmlFor=\"color\">Select Formation Color</label>\n                <input name=\"color\" type=\"color\" defaultValue=\"#ffffff\"/>\n                <input name=\"image\" type=\"url\" placeholder=\"image url\" /> \n                <input type=\"submit\" /> \n            </form>\n        </div>\n    );\n};\n\nexport default NewFormation;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,YAAT,OACgB;EAAA,IADM;IAAEC,WAAF;IAAeC,SAAf;IAA0BC,iBAA1B;IAClBC;EADkB,CACN;;EAEZ,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;IAChCA,CAAC,CAACC,cAAF;IACA,MAAMC,cAAc,GAAG,EAAvB;IACAJ,QAAQ,CAACK,OAAT,CAAkBC,IAAD,IAAU;MACvB,OAAOA,IAAI,CAACC,UAAL,CAAgBF,OAAhB,CAAyBG,SAAD,IAAe;QAC1C,OAAOJ,cAAc,CAACK,IAAf,CAAoBD,SAAS,CAACE,QAA9B,CAAP;MACH,CAFM,CAAP;IAGH,CAJD;IAKAC,OAAO,CAACC,GAAR,CAAYR,cAAZ;IACA,IAAIS,QAAQ,GAAIC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACC,MAAL,EAAhC;;IACA,OAAMX,cAAc,CAACY,QAAf,CAAwBH,QAAxB,CAAN,EAAyC;MACrCA,QAAQ,GAAIC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACC,MAAL,EAA5B;IACH;;IAAA;IACD,MAAME,eAAe,GAAG;MACpBC,IAAI,EAAEhB,CAAC,CAACiB,MAAF,CAASD,IAAT,CAAcE,KADA;MAEpBC,UAAU,EAAEnB,CAAC,CAACiB,MAAF,CAASE,UAAT,CAAoBD,KAFZ;MAGpBE,KAAK,EAAEpB,CAAC,CAACiB,MAAF,CAASG,KAAT,CAAeF,KAHF;MAIpBG,KAAK,EAAErB,CAAC,CAACiB,MAAF,CAASI,KAAT,CAAeH,KAJF;MAKpBV,QAAQ,EAAEG;IALU,CAAxB;IAOA,MAAMW,aAAa,GAAG,CAAC,GAAG3B,WAAW,CAACU,UAAhB,EAA4BU,eAA5B,CAAtB;IACA,OAAOnB,SAAS,CAACD,WAAW,CAAC4B,EAAb,EAAiB;MAAClB,UAAU,EAAEiB;IAAb,CAAjB,CAAT,CACNE,IADM,CACAC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADb,EAENF,IAFM,CAEAG,IAAD,IAAU9B,iBAAiB,CAAC8B,IAAD,CAF1B,EAGNH,IAHM,CAGD,MAAMxB,CAAC,CAACiB,MAAF,CAASW,KAAT,EAHL,EAINJ,IAJM,CAID,MAAMK,KAAK,CAAC,uBAAD,CAJV,CAAP;EAKH;;EAAA;EAED,oBACI;IAAK,EAAE,EAAC,2BAAR;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAM,EAAE,EAAC,mBAAT;MAA6B,QAAQ,EAAE9B,uBAAvC;MAAA,wBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,WAAW,EAAC;MAA3C;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,YAAZ;QAAyB,IAAI,EAAC,MAA9B;QAAqC,WAAW,EAAC;MAAjD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAO,IAAI,EAAC,OAAZ;QAAoB,IAAI,EAAC,OAAzB;QAAiC,YAAY,EAAC;MAA9C;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAO,IAAI,EAAC,OAAZ;QAAoB,IAAI,EAAC,KAAzB;QAA+B,WAAW,EAAC;MAA3C;QAAA;QAAA;QAAA;MAAA,QALJ,eAMI;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;KA5CQL,Y;AA4CR;AAED,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}