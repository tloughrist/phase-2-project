{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\nimport Banner from \"./Banner/Banner.js\";\nimport PersonalInfo from \"./PersonalInfo.js\";\nimport Formations from \"./Formations/Formations.js\";\nimport Home from \"./Home.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [userData, setUserData] = useState();\n  const [token, setToken] = useState(\"unchecked\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    return fetch(\"http://localhost:3000/users\").then(response => response.json()).then(data => {\n      setUserData(data);\n      getToken(data);\n    }).then(() => setIsLoaded(true));\n  }, []);\n  useEffect(() => {\n    removeInvalidFormations(\"formations\");\n    removeInvalidFormations(\"invitations\");\n  }, [token]);\n\n  function getToken(data) {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n\n    if (data) {\n      if (userToken) {\n        const returningUser = data.find(el => el.token.username === userToken.username && el.token.password === userToken.password);\n        setCurrentUser(returningUser);\n        return returningUser.length > 0 ? setToken(\"valid\") : setToken(\"invalid\");\n      } else {\n        return setToken(\"invalid\");\n      }\n    } else {\n      return setToken(\"unchecked\");\n    }\n  }\n\n  ;\n\n  function login(userObj) {\n    setCurrentUser(userObj);\n    sessionStorage.setItem('token', JSON.stringify(userObj.token));\n    setToken(\"valid\");\n    return history.push(\"/personalinfo\");\n  }\n\n  ;\n\n  function removeInvalidFormations(formationType) {\n    if (currentUser.formations.length > 0) {\n      const validFormations = currentUser[formationType].filter(el1 => {\n        const formationOwner = userData.find(el2 => el2.id === el1.admin);\n        const ownerFormationIdArr = formationOwner.formations.map(el2 => el2.id);\n        return ownerFormationIdArr.includes(el1.id);\n      });\n      return patchCurrentUser({\n        formationType: validFormations\n      });\n    } else {\n      return;\n    }\n  }\n\n  ;\n\n  function removeInvalidInvitations(data, returningUser) {\n    if (returningUser.invitations.length > 0) {\n      const validInvitations = returningUser.invitations.filter(el1 => {\n        const formationOwner = data.find(el2 => el2.id === el1.admin);\n        const ownerFormationIdArr = formationOwner.formations.map(el2 => el2.id);\n        return ownerFormationIdArr.includes(el1.id);\n      });\n      return patchCurrentUser({\n        invitations: validInvitations\n      });\n    } else {\n      return;\n    }\n  }\n\n  ;\n\n  function logout() {\n    sessionStorage.clear();\n    setToken(\"invalid\");\n    setCurrentUser();\n    return history.push(\"/\");\n  }\n\n  ;\n\n  function patchCurrentUser(patchObj) {\n    return fetch(`http://localhost:3000/users/${currentUser.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(patchObj)\n    }).then(response => response.json()).then(data => updateCurrentUser(data));\n  }\n\n  ;\n\n  function patchUser(userId, patchObj) {\n    return fetch(`http://localhost:3000/users/${userId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(patchObj)\n    }).then(response => response.json()).then(data => updateUserData(data));\n  }\n\n  ;\n\n  function updateUserData(userObj) {\n    const sansUserData = userData.filter(el => el.id !== userObj.id);\n    return setUserData([...userData, sansUserData]);\n  }\n\n  ;\n\n  function updateCurrentUser(userObj) {\n    updateUserData(userObj);\n    return setCurrentUser(userObj);\n  }\n\n  ;\n\n  function sendInvite(formationObj, user, sender) {\n    const formationSubscriberObj = {\n      name: formationObj.name,\n      color: formationObj.color,\n      image: formationObj.image,\n      id: formationObj.id,\n      owner: `${sender.name} (${sender.token.username})`,\n      admin: sender.id\n    };\n    user.invitations = [...user.invitations, formationSubscriberObj];\n    return patchUser(user.id, {\n      invitations: user.invitations\n    });\n  }\n\n  ;\n\n  function rejectInvitation(invitationId) {\n    currentUser.invitations = currentUser.invitations.filter(el => el.id !== invitationId);\n    return patchCurrentUser({\n      invitations: currentUser.invitations\n    });\n  }\n\n  ;\n\n  function acceptInvitation(newFormationObj) {\n    return handleSenderAcceptInvite(newFormationObj).then(() => handleCurrentUserAcceptInvite(newFormationObj));\n  }\n\n  ;\n\n  function handleCurrentUserAcceptInvite(newFormationObj) {\n    currentUser.invitations = currentUser.invitations.filter(el => el.id !== newFormationObj.id);\n    currentUser.formations = [...currentUser.formations, newFormationObj];\n    return patchCurrentUser({\n      invitations: currentUser.invitations,\n      formations: currentUser.formations\n    });\n  }\n\n  ;\n\n  function handleSenderAcceptInvite(newFormationObj) {\n    const sender = userData.find(el => el.id === newFormationObj.admin);\n    const senderCurrentFormation = sender.formations.find(el => el.id === newFormationObj.id);\n    senderCurrentFormation.users = [...senderCurrentFormation.users, currentUser.id];\n    return patchUser(sender.id, {\n      formations: sender.formations\n    });\n  }\n\n  ;\n\n  function sendRequest(formationObj, user, sender) {\n    const formationRequestObj = {\n      name: formationObj.name,\n      color: formationObj.color,\n      id: formationObj.id,\n      owner: `${user.name} (${user.token.username})`,\n      image: formationObj.image,\n      admin: user.id,\n      supplicant: sender.id\n    };\n    user.requests = user.requests.filter(el => el.id !== formationObj.id);\n    user.requests = [...user.requests, formationRequestObj];\n    return patchUser(user.id, {\n      requests: user.requests\n    });\n  }\n\n  ;\n\n  function rejectRequest(requestId) {\n    currentUser.requests = currentUser.requests.filter(el => el.id !== requestId);\n    return patchCurrentUser({\n      requests: currentUser.requests\n    });\n  }\n\n  ;\n\n  function acceptRequest(newFormationObj, supplicant) {\n    return handleSenderAcceptRequest(newFormationObj, supplicant).then(() => handleCurrentUserAcceptRequest(newFormationObj, supplicant));\n  }\n\n  ;\n\n  function handleCurrentUserAcceptRequest(newFormationObj, supplicant) {\n    currentUser.requests = currentUser.requests.filter(el => el.id !== newFormationObj.id);\n    const modifiedFormationObj = currentUser.formations.find(el => el.id === newFormationObj.id);\n    modifiedFormationObj.users = [...modifiedFormationObj.users, supplicant];\n    return patchCurrentUser({\n      requests: currentUser.requests,\n      formations: currentUser.formations\n    });\n  }\n\n  ;\n\n  function handleSenderAcceptRequest(newFormationObj, supplicant) {\n    const sender = userData.find(el => el.id === supplicant);\n    sender.formations = [...sender.formations, newFormationObj];\n    return patchUser(supplicant, {\n      formations: sender.formations\n    });\n  }\n\n  ;\n\n  function leaveFormation(formation) {\n    return handleOwnerLeave(formation).then(() => handleCurrentUserLeave(formation));\n  }\n\n  ;\n\n  function handleOwnerLeave(formation) {\n    const owner = userData.find(el => el.id === formation.admin);\n    const ownerFormation = owner.formations.find(el => el.id === formation.id);\n    ownerFormation.users = ownerFormation.users.filter(el => el !== currentUser.id);\n    return patchUser(owner.id, {\n      formations: owner.formations\n    });\n  }\n\n  ;\n\n  function handleCurrentUserLeave(formation) {\n    currentUser.formations = currentUser.formations.filter(el => el.id !== formation.id);\n    return patchCurrentUser({\n      formations: currentUser.formations\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      token: token,\n      logout: logout,\n      isLoaded: isLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          userData: userData,\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/formations\",\n        children: /*#__PURE__*/_jsxDEV(Formations, {\n          currentUser: currentUser,\n          token: token,\n          patchCurrentUser: patchCurrentUser,\n          updateCurrentUser: updateCurrentUser,\n          userData: userData,\n          updateUserData: updateUserData,\n          sendInvite: sendInvite,\n          rejectInvitation: rejectInvitation,\n          acceptInvitation: acceptInvitation,\n          patchUser: patchUser,\n          isLoaded: isLoaded,\n          sendRequest: sendRequest,\n          rejectRequest: rejectRequest,\n          acceptRequest: acceptRequest,\n          leaveFormation: leaveFormation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/personalinfo\",\n        children: /*#__PURE__*/_jsxDEV(PersonalInfo, {\n          currentUser: currentUser,\n          token: token,\n          patchCurrentUser: patchCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(SignUp, {\n          userData: userData,\n          login: login,\n          updateUserData: updateUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"1F4Yb7T88++5j87UbKeF/CnvfM4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Switch","useHistory","Login","SignUp","Banner","PersonalInfo","Formations","Home","App","currentUser","setCurrentUser","userData","setUserData","token","setToken","isLoaded","setIsLoaded","history","fetch","then","response","json","data","getToken","removeInvalidFormations","tokenString","sessionStorage","getItem","userToken","JSON","parse","returningUser","find","el","username","password","length","login","userObj","setItem","stringify","push","formationType","formations","validFormations","filter","el1","formationOwner","el2","id","admin","ownerFormationIdArr","map","includes","patchCurrentUser","removeInvalidInvitations","invitations","validInvitations","logout","clear","patchObj","method","headers","body","updateCurrentUser","patchUser","userId","updateUserData","sansUserData","sendInvite","formationObj","user","sender","formationSubscriberObj","name","color","image","owner","rejectInvitation","invitationId","acceptInvitation","newFormationObj","handleSenderAcceptInvite","handleCurrentUserAcceptInvite","senderCurrentFormation","users","sendRequest","formationRequestObj","supplicant","requests","rejectRequest","requestId","acceptRequest","handleSenderAcceptRequest","handleCurrentUserAcceptRequest","modifiedFormationObj","leaveFormation","formation","handleOwnerLeave","handleCurrentUserLeave","ownerFormation"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\nimport Banner from \"./Banner/Banner.js\";\nimport PersonalInfo from \"./PersonalInfo.js\";\nimport Formations from \"./Formations/Formations.js\";\nimport Home from \"./Home.js\";\n\nfunction App() {\n    \n    const [currentUser, setCurrentUser] = useState();\n    const [userData, setUserData] = useState();\n    const [token, setToken] = useState(\"unchecked\");\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        return fetch(\"http://localhost:3000/users\")\n        .then((response) => response.json())\n        .then((data) => {\n            setUserData(data);\n            getToken(data);\n        })\n        .then(() => setIsLoaded(true));            \n    }, []);\n\n    useEffect(() => {\n        removeInvalidFormations(\"formations\");\n        removeInvalidFormations(\"invitations\");\n    }, [token])\n\n    function getToken(data) {\n        const tokenString = sessionStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        if (data) {\n            if (userToken) {\n                const returningUser = data.find((el) => el.token.username === userToken.username && el.token.password === userToken.password);\n                setCurrentUser(returningUser);\n                return returningUser.length > 0 ? setToken(\"valid\") : setToken(\"invalid\");\n            } else {\n                return setToken(\"invalid\");\n            }\n        } else {\n            return setToken(\"unchecked\");\n        }\n    };\n\n    function login(userObj) {\n        setCurrentUser(userObj);\n        sessionStorage.setItem('token', JSON.stringify(userObj.token));\n        setToken(\"valid\");\n        return history.push(\"/personalinfo\");\n    };\n\n    function removeInvalidFormations(formationType) {\n        if (currentUser.formations.length > 0) {\n            const validFormations = currentUser[formationType].filter((el1) => {\n                const formationOwner = userData.find((el2) => el2.id === el1.admin);\n                const ownerFormationIdArr = formationOwner.formations.map((el2) => el2.id);\n                return ownerFormationIdArr.includes(el1.id);\n            })\n            return patchCurrentUser({formationType: validFormations});\n        } else {\n            return;\n        }\n    };\n\n    function removeInvalidInvitations(data, returningUser) {\n        if (returningUser.invitations.length > 0) {\n            const validInvitations = returningUser.invitations.filter((el1) => {\n                const formationOwner = data.find((el2) => el2.id === el1.admin);\n                const ownerFormationIdArr = formationOwner.formations.map((el2) => el2.id);\n                return ownerFormationIdArr.includes(el1.id);\n            })\n            return patchCurrentUser({invitations: validInvitations});\n        } else {\n            return;\n        }\n    };\n\n    function logout() {\n        sessionStorage.clear();\n        setToken(\"invalid\");\n        setCurrentUser();\n        return history.push(\"/\");\n    };\n\n    function patchCurrentUser(patchObj) {\n        return fetch(`http://localhost:3000/users/${currentUser.id}`, {\n                method: 'PATCH',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(patchObj)\n            })\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data));\n    };\n\n    function patchUser(userId, patchObj) {\n        return fetch(`http://localhost:3000/users/${userId}`, {\n                method: 'PATCH',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(patchObj)\n            })\n        .then((response) => response.json())\n        .then((data) => updateUserData(data));\n    };\n    \n    function updateUserData(userObj) {\n        const sansUserData = userData.filter((el) => el.id !== userObj.id);\n        return setUserData([...userData, sansUserData]);\n    };\n\n    function updateCurrentUser(userObj) {\n        updateUserData(userObj)\n        return setCurrentUser(userObj);\n    };\n\n    function sendInvite(formationObj, user, sender) {\n        const formationSubscriberObj = {\n            name: formationObj.name,\n            color: formationObj.color,\n            image: formationObj.image,\n            id: formationObj.id,\n            owner: `${sender.name} (${sender.token.username})`,\n            admin: sender.id\n        };\n        user.invitations = [...user.invitations, formationSubscriberObj]\n        return patchUser(user.id, {invitations: user.invitations});\n    };\n\n    function rejectInvitation(invitationId) {\n        currentUser.invitations = currentUser.invitations.filter((el) => el.id !== invitationId);\n        return patchCurrentUser({invitations: currentUser.invitations});\n    };\n\n    function acceptInvitation(newFormationObj) {\n        return handleSenderAcceptInvite(newFormationObj)\n        .then(() => handleCurrentUserAcceptInvite(newFormationObj));\n    };\n\n    function handleCurrentUserAcceptInvite(newFormationObj) {\n        currentUser.invitations = currentUser.invitations.filter((el) => el.id !== newFormationObj.id);\n        currentUser.formations = [...currentUser.formations, newFormationObj];\n        return patchCurrentUser({invitations: currentUser.invitations, formations: currentUser.formations});\n    };\n\n    function handleSenderAcceptInvite(newFormationObj) {\n        const sender = userData.find((el) => el.id === newFormationObj.admin);\n        const senderCurrentFormation = sender.formations.find((el) => el.id === newFormationObj.id);\n        senderCurrentFormation.users = [...senderCurrentFormation.users, currentUser.id];\n        return patchUser(sender.id, {formations: sender.formations});\n    };\n\n    function sendRequest(formationObj, user, sender) {\n        const formationRequestObj = {\n            name: formationObj.name,\n            color: formationObj.color,\n            id: formationObj.id,\n            owner: `${user.name} (${user.token.username})`,\n            image: formationObj.image,\n            admin: user.id,\n            supplicant: sender.id\n        };\n        user.requests = user.requests.filter((el) => el.id !== formationObj.id);\n        user.requests = [...user.requests, formationRequestObj]\n        return patchUser(user.id, {requests: user.requests});\n    };\n\n    function rejectRequest(requestId) {\n        currentUser.requests = currentUser.requests.filter((el) => el.id !== requestId);\n        return patchCurrentUser({requests: currentUser.requests});\n    };\n\n    function acceptRequest(newFormationObj, supplicant) {\n        return handleSenderAcceptRequest(newFormationObj, supplicant)\n        .then(() => handleCurrentUserAcceptRequest(newFormationObj, supplicant));\n    };\n\n    function handleCurrentUserAcceptRequest(newFormationObj, supplicant) {\n        currentUser.requests = currentUser.requests.filter((el) => el.id !== newFormationObj.id);\n        const modifiedFormationObj = currentUser.formations.find((el) => el.id === newFormationObj.id)\n        modifiedFormationObj.users = [...modifiedFormationObj.users, supplicant];\n        return patchCurrentUser({requests: currentUser.requests, formations: currentUser.formations});\n    };\n\n    function handleSenderAcceptRequest(newFormationObj, supplicant) {\n        const sender = userData.find((el) => el.id === supplicant);\n        sender.formations = [...sender.formations, newFormationObj];\n        return patchUser(supplicant, {formations: sender.formations});\n    };\n\n    function leaveFormation(formation) {\n        return handleOwnerLeave(formation)\n        .then(() => handleCurrentUserLeave(formation));\n    };\n\n    function handleOwnerLeave(formation) {\n        const owner = userData.find((el) => el.id === formation.admin);\n        const ownerFormation = owner.formations.find((el) => el.id === formation.id);\n        ownerFormation.users = ownerFormation.users.filter((el) => el !== currentUser.id);\n        return patchUser(owner.id, {formations: owner.formations});\n    };  \n\n    function handleCurrentUserLeave(formation) {\n        currentUser.formations = currentUser.formations.filter((el) => el.id !== formation.id);\n        return patchCurrentUser({formations: currentUser.formations});\n    };\n\n    return (\n        <div>\n            <Banner\n                token={token}\n                logout={logout}\n                isLoaded={isLoaded}\n            />\n            <Switch>\n                <Route path=\"/login\">\n                    <Login\n                        userData={userData}\n                        login={login}\n                    />\n                </Route>\n                <Route path=\"/formations\">\n                    <Formations\n                        currentUser={currentUser}\n                        token={token}\n                        patchCurrentUser={patchCurrentUser}\n                        updateCurrentUser={updateCurrentUser}\n                        userData={userData}\n                        updateUserData={updateUserData}\n                        sendInvite={sendInvite}\n                        rejectInvitation={rejectInvitation}\n                        acceptInvitation={acceptInvitation}\n                        patchUser={patchUser}\n                        isLoaded={isLoaded}\n                        sendRequest={sendRequest}\n                        rejectRequest={rejectRequest}\n                        acceptRequest={acceptRequest}\n                        leaveFormation={leaveFormation}\n                    />\n                </Route>\n                <Route path=\"/personalinfo\">\n                    <PersonalInfo\n                        currentUser={currentUser}\n                        token={token}\n                        patchCurrentUser={patchCurrentUser}\n                    />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUp\n                        userData={userData}\n                        login={login}\n                        updateUserData={updateUserData}\n                    />\n                </Route>\n                <Route path=\"/\">\n                    <Home\n                    />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}