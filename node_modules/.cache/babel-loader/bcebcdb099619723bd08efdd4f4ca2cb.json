{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/MyFormations.js\";\nimport React from \"react\";\nimport FormationCard from \"./FormationCard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyFormations(_ref) {\n  let {\n    currentUser,\n    searchValue,\n    userData\n  } = _ref;\n\n  let displayFormations = /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"No formations yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 29\n  }, this);\n\n  if (currentUser.formations.length > 0) {\n    displayFormations = currentUser.formations.map(el => /*#__PURE__*/_jsxDEV(FormationCard, {\n      formation: el,\n      currentUser: currentUser,\n      userData: userData\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 64\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Formations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"formation-array-container\",\n      children: displayFormations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MyFormations;\n;\nexport default MyFormations;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyFormations\");","map":{"version":3,"names":["React","FormationCard","MyFormations","currentUser","searchValue","userData","displayFormations","formations","length","map","el","id"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/MyFormations.js"],"sourcesContent":["import React from \"react\";\nimport FormationCard from \"./FormationCard.js\"\n\nfunction MyFormations({ currentUser, searchValue, userData }) {\n\n    let displayFormations = <h2>No formations yet.</h2>\n\n    if (currentUser.formations.length > 0) {\n        displayFormations = currentUser.formations.map((el) => <FormationCard key={el.id} formation={el} currentUser={currentUser} userData={userData} />);\n    }\n    \n    return (\n        <div>\n            <h1>My Formations</h1>\n            <div id=\"formation-array-container\">\n                {displayFormations}\n            </div>\n        </div>\n    );\n};\n\nexport default MyFormations;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,SAASC,YAAT,OAA8D;EAAA,IAAxC;IAAEC,WAAF;IAAeC,WAAf;IAA4BC;EAA5B,CAAwC;;EAE1D,IAAIC,iBAAiB,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAxB;;EAEA,IAAIH,WAAW,CAACI,UAAZ,CAAuBC,MAAvB,GAAgC,CAApC,EAAuC;IACnCF,iBAAiB,GAAGH,WAAW,CAACI,UAAZ,CAAuBE,GAAvB,CAA4BC,EAAD,iBAAQ,QAAC,aAAD;MAA2B,SAAS,EAAEA,EAAtC;MAA0C,WAAW,EAAEP,WAAvD;MAAoE,QAAQ,EAAEE;IAA9E,GAAoBK,EAAE,CAACC,EAAvB;MAAA;MAAA;MAAA;IAAA,QAAnC,CAApB;EACH;;EAED,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,EAAE,EAAC,2BAAR;MAAA,UACKL;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;KAhBQJ,Y;AAgBR;AAED,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}