{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\nimport Banner from \"./Banner/Banner.js\";\nimport PersonalInfo from \"./PersonalInfo.js\";\nimport Formations from \"./Formations/Formations.js\";\nimport Home from \"./Home.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [userData, setUserData] = useState();\n  const [token, setToken] = useState(\"unchecked\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const history = useHistory();\n  useEffect(() => loadInit(), []);\n\n  async function loadInit() {\n    const response = await fetch(\"http://localhost:3000/users\");\n    const data = await response.json();\n    setUserData(data);\n    getToken(data);\n    return setIsLoaded(true);\n  }\n\n  ;\n  useEffect(() => {\n    if (currentUser) {\n      removeInvalidFormations(\"formations\");\n      removeInvalidFormations(\"invitations\");\n    } else {\n      return;\n    }\n  }, [token]);\n\n  function getToken(data) {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n\n    if (userToken) {\n      const returningUser = data.find(el => el.token.username === userToken.username && el.token.password === userToken.password);\n      setCurrentUser(returningUser);\n      return returningUser ? setToken(\"valid\") : setToken(\"invalid\");\n    } else {\n      return setToken(\"invalid\");\n    }\n  }\n\n  ;\n\n  function login(userObj) {\n    setCurrentUser(userObj);\n    sessionStorage.setItem('token', JSON.stringify(userObj.token));\n    setToken(\"valid\");\n    return history.push(\"/personalinfo\");\n  }\n\n  ;\n\n  function removeInvalidFormations(formationType) {\n    const toBeChecked = formationType === \"formations\" ? currentUser.formations : currentUser.invitations;\n\n    if (toBeChecked.length > 0) {\n      const validFormations = toBeChecked.filter(el1 => {\n        const formationOwner = userData.find(el2 => el2.id === el1.admin);\n        const ownerFormationIdArr = formationOwner.formations.map(el2 => el2.id);\n        return ownerFormationIdArr.includes(el1.id);\n      });\n      return formationType === \"formations\" ? patchCurrentUser({\n        formations: validFormations\n      }) : patchCurrentUser({\n        invitations: validFormations\n      });\n    } else {\n      return;\n    }\n  }\n\n  ;\n\n  function logout() {\n    sessionStorage.clear();\n    setToken(\"invalid\");\n    setCurrentUser();\n    return history.push(\"/\");\n  }\n\n  ;\n\n  async function patchCurrentUser(patchObj) {\n    const response = await fetch(`http://localhost:3000/users/${currentUser.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(patchObj)\n    });\n    const data = await response.json();\n    return updateCurrentUser(data);\n  }\n\n  ;\n\n  async function patchUser(userId, patchObj) {\n    const response = await fetch(`http://localhost:3000/users/${userId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(patchObj)\n    });\n    const data = await response.json();\n    return updateUserData(data);\n  }\n\n  ;\n\n  function updateUserData(userObj) {\n    const sansUserData = userData.filter(el => el.id !== userObj.id);\n    return setUserData([...sansUserData, userObj]);\n  }\n\n  ;\n\n  function updateCurrentUser(userObj) {\n    updateUserData(userObj);\n    return setCurrentUser(userObj);\n  }\n\n  ;\n\n  function sendInvite(formationObj, user, sender) {\n    const formationSubscriberObj = {\n      name: formationObj.name,\n      color: formationObj.color,\n      image: formationObj.image,\n      id: formationObj.id,\n      owner: `${sender.name} (${sender.token.username})`,\n      admin: sender.id\n    };\n    const addInvitations = [...user.invitations, formationSubscriberObj];\n    alert(\"Invitation sent\");\n    return patchUser(user.id, {\n      invitations: addInvitations\n    });\n  }\n\n  ;\n\n  function rejectInvitation(invitationId) {\n    const sansInvitations = currentUser.invitations.filter(el => el.id !== invitationId);\n    return patchCurrentUser({\n      invitations: sansInvitations\n    });\n  }\n\n  ;\n\n  function acceptInvitation(newFormationObj) {\n    return handleSenderAcceptInvite(newFormationObj).then(() => handleCurrentUserAcceptInvite(newFormationObj));\n  }\n\n  ;\n\n  function handleCurrentUserAcceptInvite(newFormationObj) {\n    const userPlaceHolder = { ...currentUser\n    };\n    userPlaceHolder.invitations = userPlaceHolder.invitations.filter(el => el.id !== newFormationObj.id);\n    userPlaceHolder.formations = [...userPlaceHolder.formations, newFormationObj]; //setCurrentUser(userPlaceHolder);\n\n    return patchCurrentUser(userPlaceHolder);\n  }\n\n  ;\n\n  function handleSenderAcceptInvite(newFormationObj) {\n    const sender = userData.find(el => el.id === newFormationObj.admin);\n    const senderCurrentFormation = sender.formations.find(el => el.id === newFormationObj.id);\n    senderCurrentFormation.users = [...senderCurrentFormation.users, currentUser.id];\n    return patchUser(sender.id, {\n      formations: sender.formations\n    });\n  }\n\n  ;\n\n  function sendRequest(formationObj, user, sender) {\n    const formationRequestObj = {\n      name: formationObj.name,\n      color: formationObj.color,\n      id: formationObj.id,\n      owner: `${user.name} (${user.token.username})`,\n      image: formationObj.image,\n      admin: user.id,\n      supplicant: sender.id\n    };\n    const sansRequests = user.requests.filter(el => el.id !== formationObj.id);\n    const addRequests = [...sansRequests, formationRequestObj];\n    alert(\"Request sent\");\n    return patchUser(user.id, {\n      requests: addRequests\n    });\n  }\n\n  ;\n\n  function rejectRequest(requestId) {\n    const sansRequests = currentUser.requests.filter(el => el.id !== requestId);\n    return patchCurrentUser({\n      requests: sansRequests\n    });\n  }\n\n  ;\n\n  function acceptRequest(newFormationObj, supplicant) {\n    return handleSenderAcceptRequest(newFormationObj, supplicant).then(() => handleCurrentUserAcceptRequest(newFormationObj, supplicant));\n  }\n\n  ;\n\n  function handleCurrentUserAcceptRequest(newFormationObj, supplicant) {\n    const sansRequests = currentUser.requests.filter(el => el.id !== newFormationObj.id);\n    const sansFormations = currentUser.formations.filter(el => el.id !== newFormationObj.id);\n    const modifiedFormationObj = currentUser.formations.find(el => el.id === newFormationObj.id);\n    modifiedFormationObj.users = [...modifiedFormationObj.users, supplicant];\n    const addFormations = [...sansFormations, modifiedFormationObj];\n    return patchCurrentUser({\n      requests: sansRequests,\n      formations: addFormations\n    });\n  }\n\n  ;\n\n  function handleSenderAcceptRequest(newFormationObj, supplicant) {\n    const sender = userData.find(el => el.id === supplicant);\n    sender.formations = [...sender.formations, newFormationObj];\n    return patchUser(supplicant, {\n      formations: sender.formations\n    });\n  }\n\n  ;\n\n  function leaveFormation(formation) {\n    return handleOwnerLeave(formation).then(() => handleCurrentUserLeave(formation));\n  }\n\n  ;\n\n  function handleOwnerLeave(formation) {\n    const owner = userData.find(el => el.id === formation.admin);\n    const ownerFormation = owner.formations.find(el => el.id === formation.id);\n    ownerFormation.users = ownerFormation.users.filter(el => el !== currentUser.id);\n    return patchUser(owner.id, {\n      formations: owner.formations\n    });\n  }\n\n  ;\n\n  function handleCurrentUserLeave(formation) {\n    const sansFormations = currentUser.formations.filter(el => el.id !== formation.id);\n    return patchCurrentUser({\n      formations: sansFormations\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      token: token,\n      logout: logout,\n      isLoaded: isLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          userData: userData,\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/formations\",\n        children: /*#__PURE__*/_jsxDEV(Formations, {\n          currentUser: currentUser,\n          token: token,\n          patchCurrentUser: patchCurrentUser,\n          updateCurrentUser: updateCurrentUser,\n          userData: userData,\n          updateUserData: updateUserData,\n          sendInvite: sendInvite,\n          rejectInvitation: rejectInvitation,\n          acceptInvitation: acceptInvitation,\n          patchUser: patchUser,\n          isLoaded: isLoaded,\n          sendRequest: sendRequest,\n          rejectRequest: rejectRequest,\n          acceptRequest: acceptRequest,\n          leaveFormation: leaveFormation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/personalinfo\",\n        children: /*#__PURE__*/_jsxDEV(PersonalInfo, {\n          currentUser: currentUser,\n          token: token,\n          patchCurrentUser: patchCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(SignUp, {\n          userData: userData,\n          login: login,\n          updateUserData: updateUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"1F4Yb7T88++5j87UbKeF/CnvfM4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Switch","useHistory","Login","SignUp","Banner","PersonalInfo","Formations","Home","App","currentUser","setCurrentUser","userData","setUserData","token","setToken","isLoaded","setIsLoaded","history","loadInit","response","fetch","data","json","getToken","removeInvalidFormations","tokenString","sessionStorage","getItem","userToken","JSON","parse","returningUser","find","el","username","password","login","userObj","setItem","stringify","push","formationType","toBeChecked","formations","invitations","length","validFormations","filter","el1","formationOwner","el2","id","admin","ownerFormationIdArr","map","includes","patchCurrentUser","logout","clear","patchObj","method","headers","body","updateCurrentUser","patchUser","userId","updateUserData","sansUserData","sendInvite","formationObj","user","sender","formationSubscriberObj","name","color","image","owner","addInvitations","alert","rejectInvitation","invitationId","sansInvitations","acceptInvitation","newFormationObj","handleSenderAcceptInvite","then","handleCurrentUserAcceptInvite","userPlaceHolder","senderCurrentFormation","users","sendRequest","formationRequestObj","supplicant","sansRequests","requests","addRequests","rejectRequest","requestId","acceptRequest","handleSenderAcceptRequest","handleCurrentUserAcceptRequest","sansFormations","modifiedFormationObj","addFormations","leaveFormation","formation","handleOwnerLeave","handleCurrentUserLeave","ownerFormation"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\nimport Banner from \"./Banner/Banner.js\";\nimport PersonalInfo from \"./PersonalInfo.js\";\nimport Formations from \"./Formations/Formations.js\";\nimport Home from \"./Home.js\";\n\nfunction App() {\n    \n    const [currentUser, setCurrentUser] = useState();\n    const [userData, setUserData] = useState();\n    const [token, setToken] = useState(\"unchecked\");\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => loadInit(), []);\n\n    async function loadInit() {\n        const response = await fetch(\"http://localhost:3000/users\");\n        const data = await response.json();\n        setUserData(data);\n        getToken(data);\n        return setIsLoaded(true);\n    };\n\n    useEffect(() => {\n        if (currentUser) {\n            removeInvalidFormations(\"formations\")\n            removeInvalidFormations(\"invitations\");\n        } else {\n            return;\n        }\n    }, [token]);\n\n    function getToken(data) {\n        const tokenString = sessionStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        if (userToken) {\n            const returningUser = data.find((el) => el.token.username === userToken.username && el.token.password === userToken.password);\n            setCurrentUser(returningUser);\n            return returningUser ? setToken(\"valid\") : setToken(\"invalid\");\n        } else {\n            return setToken(\"invalid\");\n        }\n    };\n\n    function login(userObj) {\n        setCurrentUser(userObj);\n        sessionStorage.setItem('token', JSON.stringify(userObj.token));\n        setToken(\"valid\");\n        return history.push(\"/personalinfo\");\n    };\n\n    function removeInvalidFormations(formationType) {\n        const toBeChecked = formationType === \"formations\" ? currentUser.formations : currentUser.invitations;\n        if (toBeChecked.length > 0) {\n            const validFormations = toBeChecked.filter((el1) => {\n                const formationOwner = userData.find((el2) => el2.id === el1.admin);\n                const ownerFormationIdArr = formationOwner.formations.map((el2) => el2.id);\n                return ownerFormationIdArr.includes(el1.id);\n            })\n            return formationType === \"formations\" ? patchCurrentUser({formations: validFormations}) : patchCurrentUser({invitations: validFormations});\n        } else {\n            return;\n        }\n    };\n\n    function logout() {\n        sessionStorage.clear();\n        setToken(\"invalid\");\n        setCurrentUser();\n        return history.push(\"/\");\n    };\n\n    async function patchCurrentUser(patchObj) {\n        const response = await fetch(`http://localhost:3000/users/${currentUser.id}`, {\n                method: 'PATCH',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(patchObj)\n            });\n        const data = await response.json();\n        return updateCurrentUser(data);\n    };\n\n    async function patchUser(userId, patchObj) {\n        const response = await fetch(`http://localhost:3000/users/${userId}`, {\n                method: 'PATCH',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(patchObj)\n            });\n        const data = await response.json();\n        return updateUserData(data);\n    };\n    \n    function updateUserData(userObj) {\n        const sansUserData = userData.filter((el) => el.id !== userObj.id);\n        return setUserData([...sansUserData, userObj]);\n    };\n\n    function updateCurrentUser(userObj) {\n        updateUserData(userObj)\n        return setCurrentUser(userObj);\n    };\n\n    function sendInvite(formationObj, user, sender) {\n        const formationSubscriberObj = {\n            name: formationObj.name,\n            color: formationObj.color,\n            image: formationObj.image,\n            id: formationObj.id,\n            owner: `${sender.name} (${sender.token.username})`,\n            admin: sender.id\n        };\n        const addInvitations = [...user.invitations, formationSubscriberObj];\n        alert(\"Invitation sent\");\n        return patchUser(user.id, {invitations: addInvitations});\n    };\n\n    function rejectInvitation(invitationId) {\n        const sansInvitations = currentUser.invitations.filter((el) => el.id !== invitationId);\n        return patchCurrentUser({invitations: sansInvitations});\n    };\n\n    function acceptInvitation(newFormationObj) {\n        return handleSenderAcceptInvite(newFormationObj)\n        .then(() => handleCurrentUserAcceptInvite(newFormationObj));\n    };\n\n    function handleCurrentUserAcceptInvite(newFormationObj) {\n        const userPlaceHolder = {...currentUser};\n        userPlaceHolder.invitations = userPlaceHolder.invitations.filter((el) => el.id !== newFormationObj.id);\n        userPlaceHolder.formations = [...userPlaceHolder.formations, newFormationObj];\n        //setCurrentUser(userPlaceHolder);\n        return patchCurrentUser(userPlaceHolder);\n    };\n\n    function handleSenderAcceptInvite(newFormationObj) {\n        const sender = userData.find((el) => el.id === newFormationObj.admin);\n        const senderCurrentFormation = sender.formations.find((el) => el.id === newFormationObj.id);\n        senderCurrentFormation.users = [...senderCurrentFormation.users, currentUser.id];\n        return patchUser(sender.id, {formations: sender.formations});\n    };\n\n    function sendRequest(formationObj, user, sender) {\n        const formationRequestObj = {\n            name: formationObj.name,\n            color: formationObj.color,\n            id: formationObj.id,\n            owner: `${user.name} (${user.token.username})`,\n            image: formationObj.image,\n            admin: user.id,\n            supplicant: sender.id\n        };\n        const sansRequests = user.requests.filter((el) => el.id !== formationObj.id);\n        const addRequests = [...sansRequests, formationRequestObj];\n        alert(\"Request sent\");\n        return patchUser(user.id, {requests: addRequests});\n    };\n\n    function rejectRequest(requestId) {\n        const sansRequests = currentUser.requests.filter((el) => el.id !== requestId);\n        return patchCurrentUser({requests: sansRequests});\n    };\n\n    function acceptRequest(newFormationObj, supplicant) {\n        return handleSenderAcceptRequest(newFormationObj, supplicant)\n        .then(() => handleCurrentUserAcceptRequest(newFormationObj, supplicant));\n    };\n\n    function handleCurrentUserAcceptRequest(newFormationObj, supplicant) {\n        const sansRequests = currentUser.requests.filter((el) => el.id !== newFormationObj.id);\n        const sansFormations = currentUser.formations.filter((el) => el.id !== newFormationObj.id);\n        const modifiedFormationObj = currentUser.formations.find((el) => el.id === newFormationObj.id);\n        modifiedFormationObj.users = [...modifiedFormationObj.users, supplicant];\n        const addFormations = [...sansFormations, modifiedFormationObj];\n        return patchCurrentUser({requests: sansRequests, formations: addFormations});\n    };\n\n    function handleSenderAcceptRequest(newFormationObj, supplicant) {\n        const sender = userData.find((el) => el.id === supplicant);\n        sender.formations = [...sender.formations, newFormationObj];\n        return patchUser(supplicant, {formations: sender.formations});\n    };\n\n    function leaveFormation(formation) {\n        return handleOwnerLeave(formation)\n        .then(() => handleCurrentUserLeave(formation));\n    };\n\n    function handleOwnerLeave(formation) {\n        const owner = userData.find((el) => el.id === formation.admin);\n        const ownerFormation = owner.formations.find((el) => el.id === formation.id);\n        ownerFormation.users = ownerFormation.users.filter((el) => el !== currentUser.id);\n        return patchUser(owner.id, {formations: owner.formations});\n    };  \n\n    function handleCurrentUserLeave(formation) {\n        const sansFormations = currentUser.formations.filter((el) => el.id !== formation.id);\n        return patchCurrentUser({formations: sansFormations});\n    };\n\n    return (\n        <div>\n            <Banner\n                token={token}\n                logout={logout}\n                isLoaded={isLoaded}\n            />\n            <Switch>\n                <Route path=\"/login\">\n                    <Login\n                        userData={userData}\n                        login={login}\n                    />\n                </Route>\n                <Route path=\"/formations\">\n                    <Formations\n                        currentUser={currentUser}\n                        token={token}\n                        patchCurrentUser={patchCurrentUser}\n                        updateCurrentUser={updateCurrentUser}\n                        userData={userData}\n                        updateUserData={updateUserData}\n                        sendInvite={sendInvite}\n                        rejectInvitation={rejectInvitation}\n                        acceptInvitation={acceptInvitation}\n                        patchUser={patchUser}\n                        isLoaded={isLoaded}\n                        sendRequest={sendRequest}\n                        rejectRequest={rejectRequest}\n                        acceptRequest={acceptRequest}\n                        leaveFormation={leaveFormation}\n                    />\n                </Route>\n                <Route path=\"/personalinfo\">\n                    <PersonalInfo\n                        currentUser={currentUser}\n                        token={token}\n                        patchCurrentUser={patchCurrentUser}\n                    />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUp\n                        userData={userData}\n                        login={login}\n                        updateUserData={updateUserData}\n                    />\n                </Route>\n                <Route path=\"/\">\n                    <Home\n                    />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}