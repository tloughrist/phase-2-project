{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport About from \"./About.js\";\nimport AddContact from \"./AddContact.js\";\nimport ContactContainer from \"./ContactContainer.js\";\nimport ContactRequests from \"./ContactRequests.js\";\nimport Header from \"./Header.js\";\nimport Login from \"./Login.js\";\nimport MyContactCard from \"./MyContactCard.js\";\nimport SignUp from \"./SignUp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [userData, setUserData] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"xyz\");\n  const history = useHistory();\n  useEffect(() => {\n    return fetch(\"http://localhost:3000/users\").then(response => response.json()).then(data => initialSetUp(data)).then(() => setIsLoaded(true));\n  }, []);\n\n  function initialSetUp(data) {\n    setUserData(data);\n    const accessUser = data.filter(user => user.access);\n    return accessUser !== undefined ? setCurrentUser(accessUser[0]) : setCurrentUser();\n  }\n\n  ;\n\n  function handleLogIn(loggedUser) {\n    clearAccess(userData);\n    grantAccess(loggedUser);\n    setCurrentUser(loggedUser);\n    return history.push('/mycard');\n  }\n\n  ;\n\n  function clearAccess() {\n    const accessUsers = userData.filter(user => user.access === true);\n    return accessUsers.map(user => patchUser(user, {\n      access: false\n    }));\n  }\n\n  ;\n\n  function grantAccess(userObj) {\n    setIsLoaded(false);\n    return patchUser(userObj, {\n      access: true\n    }).then(response => response.json()).then(data => updateUserData(data)).then(() => setIsLoaded(true));\n  }\n\n  ;\n\n  function logOut() {\n    setIsLoaded(false);\n    patchUser(currentUser, {\n      access: false\n    }).then(() => setIsLoaded(true));\n    history.push('/');\n    return setCurrentUser();\n  }\n\n  ;\n\n  function handleSignUp(user) {\n    handleLogIn(user);\n    return setUserData([...userData, user]);\n  }\n\n  ;\n\n  function updateCurrentUser(updatedCurrentUserObj) {\n    setCurrentUser(updatedCurrentUserObj);\n    const filteredUserData = userData.filter(user => user.id !== updatedCurrentUserObj.id);\n    return setUserData([...filteredUserData, updatedCurrentUserObj]);\n  }\n\n  ;\n\n  function updateUserData(updatedUser) {\n    const filteredUserData = userData.filter(user => user.id !== updatedUser.id);\n    return setUserData([...filteredUserData, updatedUser]);\n  }\n\n  ;\n\n  function updatePrivateNote(newNote, currentUser, alteredContactId) {\n    const oldContactsObj = currentUser.contacts;\n    const filteredContacts = oldContactsObj.filter(contact => contact.contactid !== alteredContactId);\n    const updatedContact = oldContactsObj.filter(contact => contact.contactid === alteredContactId);\n    updatedContact[0].privatenotes = newNote;\n    const newContactsObj = [...filteredContacts, updatedContact[0]];\n    setIsLoaded(false);\n    return patchUser(currentUser, {\n      contacts: newContactsObj\n    }).then(response => response.json()).then(data => updateCurrentUser(data)).then(() => setIsLoaded(true));\n  }\n\n  ;\n\n  function updateCircle(newCircle, currentUser, alteredContactId) {\n    const oldContactsObj = currentUser.contacts;\n    const filteredContacts = oldContactsObj.filter(contact => contact.contactid !== alteredContactId);\n    const updatedContact = oldContactsObj.filter(contact => contact.contactid === alteredContactId);\n    updatedContact[0].circle = newCircle;\n    const newContactsObj = [...filteredContacts, updatedContact[0]];\n    setIsLoaded(false);\n    return patchUser(currentUser, {\n      contacts: newContactsObj\n    }).then(response => response.json()).then(data => updateCurrentUser(data)).then(() => setIsLoaded(true));\n  }\n\n  ;\n\n  function deleteContact(currentUser, alteredContactId) {\n    const oldContactsObj = currentUser.contacts;\n    const filteredContacts = oldContactsObj.filter(contact => contact.contactid !== alteredContactId);\n    const newContactsObj = [...filteredContacts];\n    setIsLoaded(false);\n    return patchUser(currentUser, {\n      contacts: newContactsObj\n    }).then(response => response.json()).then(data => updateCurrentUser(data)).then(() => setIsLoaded(true));\n  }\n\n  ;\n\n  function search(value) {\n    setSearchValue(value);\n    return history.push('/addcontact');\n  }\n\n  ;\n\n  function makeRequest(currentUser, targetUser, requestedCircle) {\n    const existingRequest = targetUser.requests.filter(request => request.userid === currentUser.id);\n    const existingContact = targetUser.contacts.filter(contact => contact.contactid === currentUser.id);\n\n    if (existingRequest.length > 0 || existingContact.length > 0) {\n      return alert(\"Redundant Request\");\n    } else {\n      const request = {\n        userid: currentUser.id,\n        name: currentUser.name,\n        pic: currentUser.pic,\n        reqcircle: requestedCircle\n      };\n      const newRequests = [...targetUser.requests, request];\n      setIsLoaded(false);\n      return patchUser(targetUser, {\n        requests: newRequests\n      }).then(response => response.json()).then(data => updateUserData(data)).then(() => setIsLoaded(true));\n    }\n  }\n\n  ;\n\n  function acceptRequest(currentUser, requestingUserId, currentUserCircle, requestedCircle) {\n    const currentUserObj = {\n      contactid: currentUser.id,\n      circle: requestedCircle,\n      privatenotes: \"\"\n    };\n    const requestingUserObj = {\n      contactid: requestingUserId,\n      circle: currentUserCircle,\n      privatenotes: \"\"\n    };\n    const requestingUser = userData.filter(user => user.id === requestingUserId);\n    const currentUserContacts = [...currentUser.contacts, requestingUserObj];\n    const requestingUserContacts = [...requestingUser[0].contacts, currentUserObj];\n    const currentUserRequests = currentUser.requests.filter(request => request.userid !== requestingUserId);\n    setIsLoaded(false);\n    patchUser(requestingUser[0], {\n      contacts: requestingUserContacts\n    }).then(response => response.json()).then(data => updateUserData(data));\n    return patchUser(currentUser, {\n      requests: currentUserRequests,\n      contacts: currentUserContacts\n    }).then(response => response.json()).then(data => updateCurrentUser(data)).then(() => setIsLoaded(true));\n  }\n\n  ;\n\n  function rejectRequest(currentUser, requestingUserId) {\n    const filteredRequests = currentUser.requests.filter(request => request.userid !== requestingUserId);\n    setIsLoaded(false);\n    return patchUser(currentUser, {\n      requests: filteredRequests\n    }).then(response => response.json()).then(data => updateCurrentUser(data)).then(() => setIsLoaded(true));\n  }\n\n  ;\n\n  function filterCircle(user, information, circle) {\n    const filterKey = `${information}filter`;\n    const previousCircleFilter = user[filterKey];\n    let newCircleFilter = [];\n\n    if (previousCircleFilter.includes(circle)) {\n      newCircleFilter = previousCircleFilter.filter(circleFilter => circleFilter !== circle);\n    } else {\n      newCircleFilter = [...previousCircleFilter, circle];\n    }\n\n    const newCircleFilterObj = {\n      [filterKey]: newCircleFilter\n    };\n    setIsLoaded(false);\n    return patchUser(user, newCircleFilterObj).then(response => response.json()).then(data => updateCurrentUser(data)).then(() => setIsLoaded(true));\n  }\n\n  ;\n\n  function patchUser(userObj, patchObj) {\n    return fetch(`http://localhost:3000/users/${userObj.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(patchObj)\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          handleLogIn: handleLogIn,\n          userData: userData,\n          search: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contacts\",\n        children: /*#__PURE__*/_jsxDEV(ContactContainer, {\n          currentUser: currentUser,\n          userData: userData,\n          isLoaded: isLoaded,\n          updatePrivateNote: updatePrivateNote,\n          updateCircle: updateCircle,\n          deleteContact: deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mycard\",\n        children: /*#__PURE__*/_jsxDEV(MyContactCard, {\n          currentUser: currentUser,\n          updateCurrentUser: updateCurrentUser,\n          isLoaded: isLoaded,\n          patchUser: patchUser,\n          filterCircle: filterCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/requests\",\n        children: /*#__PURE__*/_jsxDEV(ContactRequests, {\n          currentUser: currentUser,\n          isLoaded: isLoaded,\n          acceptRequest: acceptRequest,\n          rejectRequest: rejectRequest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/addcontact\",\n        children: /*#__PURE__*/_jsxDEV(AddContact, {\n          currentUser: currentUser,\n          isLoaded: isLoaded,\n          userData: userData,\n          searchValue: searchValue,\n          makeRequest: makeRequest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(SignUp, {\n          handleLogIn: handleLogIn,\n          handleSignUp: handleSignUp,\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"87+QFofT0ZzymkhwcDXnv2hXsgo=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Switch","useHistory","About","AddContact","ContactContainer","ContactRequests","Header","Login","MyContactCard","SignUp","App","currentUser","setCurrentUser","userData","setUserData","isLoaded","setIsLoaded","searchValue","setSearchValue","history","fetch","then","response","json","data","initialSetUp","accessUser","filter","user","access","undefined","handleLogIn","loggedUser","clearAccess","grantAccess","push","accessUsers","map","patchUser","userObj","updateUserData","logOut","handleSignUp","updateCurrentUser","updatedCurrentUserObj","filteredUserData","id","updatedUser","updatePrivateNote","newNote","alteredContactId","oldContactsObj","contacts","filteredContacts","contact","contactid","updatedContact","privatenotes","newContactsObj","updateCircle","newCircle","circle","deleteContact","search","value","makeRequest","targetUser","requestedCircle","existingRequest","requests","request","userid","existingContact","length","alert","name","pic","reqcircle","newRequests","acceptRequest","requestingUserId","currentUserCircle","currentUserObj","requestingUserObj","requestingUser","currentUserContacts","requestingUserContacts","currentUserRequests","rejectRequest","filteredRequests","filterCircle","information","filterKey","previousCircleFilter","newCircleFilter","includes","circleFilter","newCircleFilterObj","patchObj","method","headers","Accept","body","JSON","stringify"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport About from \"./About.js\";\nimport AddContact from \"./AddContact.js\";\nimport ContactContainer from \"./ContactContainer.js\";\nimport ContactRequests from \"./ContactRequests.js\";\nimport Header from \"./Header.js\";\nimport Login from \"./Login.js\";\nimport MyContactCard from \"./MyContactCard.js\";\nimport SignUp from \"./SignUp.js\";\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState();\n    const [userData, setUserData] = useState();\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [searchValue, setSearchValue] = useState(\"xyz\");\n\n    const history = useHistory(); \n\n    useEffect(() => {\n        return (fetch(\"http://localhost:3000/users\")\n        .then((response) => response.json())\n        .then((data) => initialSetUp(data))\n        .then(() => setIsLoaded(true)))\n    }, []);\n\n    function initialSetUp(data) {\n        setUserData(data);\n        const accessUser = data.filter((user) => user.access);\n        return accessUser !== undefined ? setCurrentUser(accessUser[0]) : setCurrentUser();\n    };\n\n    function handleLogIn(loggedUser) {\n        clearAccess(userData);\n        grantAccess(loggedUser);\n        setCurrentUser(loggedUser);\n        return history.push('/mycard');\n    };\n\n    function clearAccess() {\n        const accessUsers = userData.filter((user) => user.access === true)\n        return accessUsers.map((user) => patchUser(user, {access: false}));\n    };\n\n    function grantAccess(userObj) {\n        setIsLoaded(false)\n        return (patchUser(userObj, {access: true})\n        .then((response) => response.json())\n        .then((data) => updateUserData(data))\n        .then(() => setIsLoaded(true)))\n    };\n\n    function logOut() {\n        setIsLoaded(false);\n        patchUser(currentUser, {access: false})\n        .then(() => setIsLoaded(true));\n        history.push('/')\n        return setCurrentUser();\n    };\n\n    function handleSignUp(user) {\n        handleLogIn(user);\n        return setUserData([...userData, user]);\n    };\n\n    function updateCurrentUser(updatedCurrentUserObj) {\n        setCurrentUser(updatedCurrentUserObj);\n        const filteredUserData = userData.filter((user) => user.id !== updatedCurrentUserObj.id);\n        return setUserData([...filteredUserData, updatedCurrentUserObj]);\n    };\n\n    function updateUserData(updatedUser) {\n        const filteredUserData = userData.filter((user) => user.id !== updatedUser.id);\n        return setUserData([...filteredUserData, updatedUser]);\n    };\n\n    function updatePrivateNote(newNote, currentUser, alteredContactId) {\n        const oldContactsObj = currentUser.contacts;\n        const filteredContacts = oldContactsObj.filter((contact) => contact.contactid !== alteredContactId);\n        const updatedContact = oldContactsObj.filter((contact) => contact.contactid === alteredContactId);\n        updatedContact[0].privatenotes = newNote;\n        const newContactsObj = [...filteredContacts, updatedContact[0]];\n        setIsLoaded(false);\n        return (patchUser(currentUser, {contacts: newContactsObj})\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data))\n        .then(() => setIsLoaded(true)));\n    };\n\n    function updateCircle(newCircle, currentUser, alteredContactId) {\n        const oldContactsObj = currentUser.contacts;\n        const filteredContacts = oldContactsObj.filter((contact) => contact.contactid !== alteredContactId);\n        const updatedContact = oldContactsObj.filter((contact) => contact.contactid === alteredContactId);\n        updatedContact[0].circle = newCircle;\n        const newContactsObj = [...filteredContacts, updatedContact[0]];\n        setIsLoaded(false);\n        return (patchUser(currentUser, {contacts: newContactsObj})\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data))\n        .then(() => setIsLoaded(true)));\n    };\n\n    function deleteContact(currentUser, alteredContactId) {\n        const oldContactsObj = currentUser.contacts;\n        const filteredContacts = oldContactsObj.filter((contact) => contact.contactid !== alteredContactId);\n        const newContactsObj = [...filteredContacts];\n        setIsLoaded(false);\n        return (patchUser(currentUser, {contacts: newContactsObj})\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data))\n        .then(() => setIsLoaded(true)));\n    };\n\n    function search(value) {\n        setSearchValue(value);\n        return history.push('/addcontact');\n    };\n\n    function makeRequest(currentUser, targetUser, requestedCircle) {\n        const existingRequest = targetUser.requests.filter((request) => request.userid === currentUser.id);\n        const existingContact = targetUser.contacts.filter((contact) => contact.contactid === currentUser.id);\n        if (existingRequest.length > 0 || existingContact.length > 0) {\n            return alert(\"Redundant Request\");\n        } else {\n            const request = {\n                userid: currentUser.id,\n                name: currentUser.name,\n                pic: currentUser.pic,\n                reqcircle: requestedCircle\n            };\n            const newRequests = [...targetUser.requests, request];\n            setIsLoaded(false); \n            return (patchUser(targetUser, {requests: newRequests})\n            .then((response) => response.json())\n            .then((data) => updateUserData(data))\n            .then(() => setIsLoaded(true)));\n        }\n    };\n\n    function acceptRequest(currentUser, requestingUserId, currentUserCircle, requestedCircle) {\n        const currentUserObj = {contactid: currentUser.id, circle: requestedCircle, privatenotes: \"\"};\n        const requestingUserObj = {contactid: requestingUserId, circle: currentUserCircle, privatenotes: \"\"};\n        const requestingUser = userData.filter((user) => user.id === requestingUserId);\n        const currentUserContacts = [...currentUser.contacts, requestingUserObj];\n        const requestingUserContacts = [...requestingUser[0].contacts, currentUserObj];\n        const currentUserRequests = currentUser.requests.filter((request) => request.userid !== requestingUserId);\n        setIsLoaded(false); \n        patchUser(requestingUser[0], {contacts: requestingUserContacts})\n        .then((response) => response.json())\n        .then((data) => updateUserData(data))\n        return (patchUser(currentUser, {requests: currentUserRequests, contacts: currentUserContacts})\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data))\n        .then(() => setIsLoaded(true)));\n    };\n\n    function rejectRequest(currentUser, requestingUserId) {\n        const filteredRequests = currentUser.requests.filter((request) => request.userid !== requestingUserId);\n        setIsLoaded(false);\n        return (patchUser(currentUser, {requests: filteredRequests})\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data))\n        .then(() => setIsLoaded(true)));\n    };\n\n    function filterCircle(user, information, circle) {\n        const filterKey = `${information}filter`;\n        const previousCircleFilter = user[filterKey];\n        let newCircleFilter = [];\n        if (previousCircleFilter.includes(circle)) {\n            newCircleFilter = previousCircleFilter.filter((circleFilter) => circleFilter !== circle);\n        } else {\n            newCircleFilter = [...previousCircleFilter, circle];\n        }\n        const newCircleFilterObj = {\n            [filterKey]: newCircleFilter\n        };\n        setIsLoaded(false);\n        return (patchUser(user, newCircleFilterObj)\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data))\n        .then(() => setIsLoaded(true)));\n    };\n\n    function patchUser(userObj, patchObj) {\n        return fetch(`http://localhost:3000/users/${userObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            },\n            body: JSON.stringify(patchObj)\n        });\n    };\n\n    return (\n        <>\n            <Banner />\n            <Switch>\n                <Route path=\"/login\">\n                    <Login\n                        handleLogIn={handleLogIn}\n                        userData={userData}\n                        search={search}\n                    />\n                </Route>\n                <Route path=\"/contacts\">\n                    <ContactContainer\n                        currentUser={currentUser}\n                        userData={userData}\n                        isLoaded={isLoaded}\n                        updatePrivateNote={updatePrivateNote}\n                        updateCircle={updateCircle}\n                        deleteContact={deleteContact}\n                    />\n                </Route>\n                <Route path=\"/mycard\">\n                    <MyContactCard\n                        currentUser={currentUser}\n                        updateCurrentUser={updateCurrentUser}\n                        isLoaded={isLoaded}\n                        patchUser={patchUser}\n                        filterCircle={filterCircle}\n                    />\n                </Route>\n                <Route path=\"/requests\">\n                    <ContactRequests\n                        currentUser={currentUser}\n                        isLoaded={isLoaded}\n                        acceptRequest={acceptRequest}\n                        rejectRequest={rejectRequest}\n                    />\n                </Route>\n                <Route path=\"/addcontact\">\n                    <AddContact\n                        currentUser={currentUser}\n                        isLoaded={isLoaded}\n                        userData={userData}\n                        searchValue={searchValue}\n                        makeRequest={makeRequest}\n                    />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUp\n                        handleLogIn={handleLogIn}\n                        handleSignUp={handleSignUp}\n                        userData={userData}\n                    />\n                </Route>\n                <Route path=\"/\">\n                    <About />\n                </Route>\n            </Switch>\n        </>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}