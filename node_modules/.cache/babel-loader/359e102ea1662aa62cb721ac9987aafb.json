{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/NewFormation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewFormation(_ref) {\n  _s();\n\n  let {\n    currentUser,\n    patchUser,\n    updateCurrentUser,\n    userData\n  } = _ref;\n  const [pronouns, setPronouns] = useState(\"unshared\");\n  const [email, setEmail] = useState(\"unshared\");\n  const [phone, setPhone] = useState(\"unshared\");\n  const [address, setAddress] = useState(\"unshared\");\n  const [notes, setNotes] = useState(\"unshared\");\n\n  function handleFormationCreation(e) {\n    e.preventDefault();\n    const formationIdArr = userData.map(user => user.formations.map(formation => formation.uniqueid));\n    let uniqueId = Math.random() + Math.random();\n\n    while (formationIdArr.includes(uniqueId)) {\n      uniqueId = Math.random() + Math.random();\n    }\n\n    ;\n    const formationName = e.target.name.value;\n    const formationColor = e.target.color.value;\n    const formationImage = e.target.image.value ? e.target.image.value : \"/inFormation.png\";\n    const newFormationObj = {\n      name: formationName,\n      color: formationColor,\n      image: formationImage,\n      uniqueid: uniqueId\n    };\n    const formationsArr = [...currentUser.formations, newFormationObj];\n    return patchUser(currentUser.id, {\n      formations: formationsArr\n    }).then(response => response.json()).then(data => updateCurrentUser(data)).then(() => e.target.reset()).then(() => alert(\"New Formation Created\"));\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"formation-array-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Formation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"newformation-form\",\n      onSubmit: handleFormationCreation,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"formation name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"color\",\n        children: \"Select Formation Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"color\",\n        type: \"color\",\n        defaultValue: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"image\",\n        type: \"url\",\n        placeholder: \"image url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Share?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Pronouns\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"pronouns\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewFormation, \"eqSUgHyV4Qz5LIaG4OVj1E7vGBc=\");\n\n_c = NewFormation;\n;\nexport default NewFormation;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFormation\");","map":{"version":3,"names":["React","useState","NewFormation","currentUser","patchUser","updateCurrentUser","userData","pronouns","setPronouns","email","setEmail","phone","setPhone","address","setAddress","notes","setNotes","handleFormationCreation","e","preventDefault","formationIdArr","map","user","formations","formation","uniqueid","uniqueId","Math","random","includes","formationName","target","name","value","formationColor","color","formationImage","image","newFormationObj","formationsArr","id","then","response","json","data","reset","alert"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/NewFormation.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction NewFormation({ currentUser, patchUser, updateCurrentUser,\n    userData }) {\n    \n    const [pronouns, setPronouns] = useState(\"unshared\");\n    const [email, setEmail] = useState(\"unshared\");\n    const [phone, setPhone] = useState(\"unshared\");\n    const [address, setAddress] = useState(\"unshared\");\n    const [notes, setNotes] = useState(\"unshared\");\n\n    function handleFormationCreation(e) {\n        e.preventDefault();\n        const formationIdArr = userData.map((user) => user.formations.map((formation) => formation.uniqueid));\n        let uniqueId = (Math.random() + Math.random());\n        while(formationIdArr.includes(uniqueId)) {\n            uniqueId = (Math.random() + Math.random());\n        };\n        const formationName = e.target.name.value;\n        const formationColor = e.target.color.value;\n        const formationImage = e.target.image.value ? e.target.image.value : \"/inFormation.png\";\n        const newFormationObj = {\n            name: formationName,\n            color: formationColor,\n            image: formationImage,\n            uniqueid: uniqueId\n        };\n        const formationsArr = [...currentUser.formations, newFormationObj];\n        return patchUser(currentUser.id, {formations: formationsArr})\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data))\n        .then(() => e.target.reset())\n        .then(() => alert(\"New Formation Created\"));\n    };\n\n    return (\n        <div id=\"formation-array-container\">\n            <h1>New Formation</h1>\n            <form id=\"newformation-form\" onSubmit={handleFormationCreation}>\n                <input name=\"name\" type=\"text\" placeholder=\"formation name\" />\n                <label htmlFor=\"color\">Select Formation Color</label>\n                <input name=\"color\" type=\"color\" defaultValue=\"#ffffff\"/>\n                <input name=\"image\" type=\"url\" placeholder=\"image url\" />\n                <div>\n                    <h3>Share?</h3>\n                    <div>\n                        <p><b>Pronouns</b></p>\n                        <input name=\"pronouns\" type=\"checkbox\" />\n                    </div>\n                </div> \n                <input type=\"submit\" /> \n            </form>\n        </div>\n    );\n};\n\nexport default NewFormation;"],"mappings":"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"},"metadata":{},"sourceType":"module"}