{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationSettings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormationSettings(_ref) {\n  _s();\n\n  let {\n    currentUser,\n    formation,\n    patchCurrentUser\n  } = _ref;\n  const [formationName, setFormationName] = useState(formation.name);\n  const [formationColor, setFormationColor] = useState(formation.color);\n  const [formationImage, setFormationImage] = useState(formation.image);\n\n  function handleFormationChange(e) {\n    e.preventDefault();\n    formation.name = formationName;\n    formation.color = formationColor;\n    formation.image = formationImage;\n    const sansFormations = currentUser.formations.filter(el => el.id !== formation.id);\n    const newFormationsArr = [...sansFormations, formation];\n    return patchCurrentUser({\n      formations: newFormationsArr\n    });\n  }\n\n  ;\n\n  function handleDelFormation() {\n    const sansFormations = currentUser.formations.filter(el => el.id !== formation.id);\n    return patchCurrentUser({\n      formations: sansFormations\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Settings for \", formation.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"display-body\",\n        onSubmit: handleFormationChange,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"formationname\",\n          children: \"Formation Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-element\",\n          onChange: e => setFormationName(e.target.value),\n          type: \"text\",\n          name: \"formationname\",\n          defaultValue: formationName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"formationcolor\",\n          children: \"Formation Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-element\",\n          onChange: e => setFormationColor(e.target.value),\n          type: \"color\",\n          name: \"formationcolor\",\n          defaultValue: formationColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"formationimage\",\n          children: \"Formation Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-element\",\n          onChange: e => setFormationImage(e.target.value),\n          type: \"url\",\n          name: \"formationimage\",\n          placeholder: \"image url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-element\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-element\",\n          onClick: handleDelFormation,\n          children: \"Delete Formation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormationSettings, \"fJfyrrCjREZaAOxhk+qbGqCZ/+w=\");\n\n_c = FormationSettings;\n;\nexport default FormationSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormationSettings\");","map":{"version":3,"names":["React","useState","FormationSettings","currentUser","formation","patchCurrentUser","formationName","setFormationName","name","formationColor","setFormationColor","color","formationImage","setFormationImage","image","handleFormationChange","e","preventDefault","sansFormations","formations","filter","el","id","newFormationsArr","handleDelFormation","target","value"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/FormationSettings.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction FormationSettings({ currentUser, formation, patchCurrentUser }) {\n    \n    const [formationName, setFormationName] = useState(formation.name);\n    const [formationColor, setFormationColor] = useState(formation.color);\n    const [formationImage, setFormationImage] = useState(formation.image);\n\n    function handleFormationChange(e) {\n        e.preventDefault();\n        formation.name = formationName;\n        formation.color = formationColor;\n        formation.image = formationImage;\n        const sansFormations = currentUser.formations.filter((el) => el.id !== formation.id);\n        const newFormationsArr = [...sansFormations, formation];\n        return patchCurrentUser({formations: newFormationsArr});\n    };\n\n    function handleDelFormation() {\n        const sansFormations = currentUser.formations.filter((el) => el.id !== formation.id);\n        return patchCurrentUser({formations: sansFormations});\n    };\n\n    return (\n        <div className=\"display-body\">\n            <h1>Settings for {formation.name}</h1>\n            <div>\n                <form className=\"display-body\" onSubmit={handleFormationChange}>\n                    <label className=\"form-label\" htmlFor=\"formationname\">Formation Name</label>\n                    <input className=\"form-element\" onChange={e => setFormationName(e.target.value)} type=\"text\" name=\"formationname\" defaultValue={formationName}/>\n                    <label className=\"form-label\" htmlFor=\"formationcolor\">Formation Color</label>\n                    <input className=\"form-element\" onChange={e => setFormationColor(e.target.value)}type=\"color\" name=\"formationcolor\" defaultValue={formationColor}/>\n                    <label className=\"form-label\" htmlFor=\"formationimage\">Formation Image</label>\n                    <input className=\"form-element\" onChange={e => setFormationImage(e.target.value)}type=\"url\" name=\"formationimage\" placeholder=\"image url\" />\n                    <input className=\"form-element\" type=\"submit\" />\n                </form>\n                <div>\n                    <button className=\"form-element\" onClick={handleDelFormation}>Delete Formation</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FormationSettings;"],"mappings":"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"},"metadata":{},"sourceType":"module"}