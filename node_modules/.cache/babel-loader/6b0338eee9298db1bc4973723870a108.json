{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Formations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport MyFormations from \"./MyFormations.js\";\nimport NewFormation from \"./NewFormation.js\";\nimport FormationBar from \"./FormationBar.js\";\nimport Invitations from \"./Invitations.js\";\nimport Requests from \"./Requests.js\";\nimport FormationUsers from \"./FormationUsers.js\";\nimport FormationInfo from \"./FormationInfo.js\";\nimport FormationSettings from \"./FormationSettings.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Formations(_ref) {\n  _s();\n\n  let {\n    token,\n    currentUser,\n    patchUser,\n    updateCurrentUser,\n    userData\n  } = _ref;\n  const [formationUrl, setFormationUrl] = useState();\n\n  if (token === \"valid\") {\n    const formationIds = currentUser.formations.map(formation => {\n      return formation.uniqueid;\n    });\n    const formationUsers = formationIds.map(id => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${id}/users`,\n        children: /*#__PURE__*/_jsxDEV(FormationUsers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, `${id}users`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    });\n    const formationInfo = formationIds.map(id => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${id}/info`,\n        children: /*#__PURE__*/_jsxDEV(FormationInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, `${id}info`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    });\n    const formationSettings = formationIds.map(id => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${id}/settings`,\n        children: /*#__PURE__*/_jsxDEV(FormationSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, `${id}settings`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Formations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormationBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/invitations\",\n          children: /*#__PURE__*/_jsxDEV(Invitations, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/requests\",\n          children: /*#__PURE__*/_jsxDEV(Requests, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/newformation\",\n          children: /*#__PURE__*/_jsxDEV(NewFormation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), formationUsers, formationInfo, formationSettings, /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations\",\n          children: /*#__PURE__*/_jsxDEV(MyFormations, {\n            currentUser: currentUser,\n            setFormationUrl: setFormationUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } else if (token === \"invalid\") {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Formations, \"ObuBgSkXSYAA/FhZLDUtt1iGz50=\");\n\n_c = Formations;\n;\nexport default Formations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formations\");","map":{"version":3,"names":["React","useState","Redirect","Route","Switch","MyFormations","NewFormation","FormationBar","Invitations","Requests","FormationUsers","FormationInfo","FormationSettings","Formations","token","currentUser","patchUser","updateCurrentUser","userData","formationUrl","setFormationUrl","formationIds","formations","map","formation","uniqueid","formationUsers","id","formationInfo","formationSettings"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Formations.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport MyFormations from \"./MyFormations.js\";\nimport NewFormation from \"./NewFormation.js\";\nimport FormationBar from \"./FormationBar.js\";\nimport Invitations from \"./Invitations.js\";\nimport Requests from \"./Requests.js\";\nimport FormationUsers from \"./FormationUsers.js\";\nimport FormationInfo from \"./FormationInfo.js\";\nimport FormationSettings from \"./FormationSettings.js\";\n\nfunction Formations({ token, currentUser, patchUser, updateCurrentUser, userData }) {\n    \n    const [formationUrl, setFormationUrl] = useState();\n\n    if (token === \"valid\") {\n        const formationIds = currentUser.formations.map((formation) => {\n            return formation.uniqueid;\n        });\n\n        const formationUsers = formationIds.map((id) => {\n            return (\n                <Route key={`${id}users`} path={`/formations/${id}/users`}>\n                    <FormationUsers />\n                </Route> \n            );\n        });\n\n        const formationInfo = formationIds.map((id) => {\n            return (\n                <Route key={`${id}info`} path={`/formations/${id}/info`}>\n                    <FormationInfo />\n                </Route> \n            );\n        });\n\n        const formationSettings = formationIds.map((id) => {\n            return (\n                <Route key={`${id}settings`} path={`/formations/${id}/settings`}>\n                    <FormationSettings />\n                </Route> \n            );\n        });\n    \n        return (\n            <div className=\"display-container\">\n                <h1>Formations</h1>\n                <FormationBar />\n                <Switch>\n                    <Route path=\"/formations/invitations\">\n                        <Invitations />\n                    </Route>\n                    <Route path=\"/formations/requests\">\n                        <Requests />\n                    </Route>\n                    <Route path=\"/formations/newformation\">\n                        <NewFormation />\n                    </Route>\n                    {formationUsers}\n                    {formationInfo}\n                    {formationSettings}\n                    <Route path=\"/formations\">\n                        <MyFormations\n                            currentUser={currentUser}\n                            setFormationUrl={setFormationUrl} \n                        />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    } else if (token === \"invalid\") {\n        return <Redirect to=\"/login\" />;\n    } else {\n        return <h1>Loading...</h1>;\n    }};\n\nexport default Formations;"],"mappings":"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"},"metadata":{},"sourceType":"module"}