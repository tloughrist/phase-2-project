{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport About from \"./About.js\";\nimport AddContact from \"./AddContact.js\";\nimport ContactContainer from \"./ContactContainer.js\";\nimport ContactRequests from \"./ContactRequests.js\";\nimport Header from \"./Header.js\";\nimport Login from \"./Login.js\";\nimport MyContactCard from \"./MyContactCard.js\";\nimport SignUp from \"./SignUp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [userData, setUserData] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [searchValue, setSearchValue] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    fetch(\"http://localhost:3000/users\").then(response => response.json()).then(data => issueAccess(data)).then(() => setIsLoaded(true));\n  }, []);\n\n  function issueAccess(data) {\n    setUserData(data);\n    const accessUser = data.filter(user => user.access);\n    return accessUser !== undefined ? setCurrentUser(accessUser[0]) : setCurrentUser();\n  }\n\n  ;\n\n  function handleLogIn(loggedUser) {\n    const accessUsers = userData.filter(user => user.access === true);\n    accessUsers.map(user => {\n      fetch(`http://localhost:3000/users/${user.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          access: false\n        })\n      });\n    });\n    fetch(`http://localhost:3000/users/${loggedUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        access: true\n      })\n    }).then(response => response.json()).then(data => handleUserUpdate(data)).then(() => history.push('/mycard'));\n  }\n\n  ;\n\n  function logOut() {\n    fetch(`http://localhost:3000/users/${currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        access: false\n      })\n    });\n    history.push('/');\n    return setCurrentUser();\n  }\n\n  function handleSignUp(user) {\n    return setUserData([...userData, user]);\n  }\n\n  function handleUserUpdate(updatedUser) {\n    setCurrentUser(updatedUser);\n    const filteredUserData = userData.filter(user => user.id !== updatedUser.id);\n    return setUserData([...filteredUserData, updatedUser]);\n  }\n\n  ;\n\n  function updateCurrentUser(updatedCurrentUserObj) {\n    return setCurrentUser(updatedCurrentUserObj);\n  }\n\n  ;\n\n  function updateUserData(updatedUser) {\n    const filteredUserData = userData.filter(user => user.id !== updatedUser.id);\n    return setUserData([...filteredUserData, updatedUser]);\n  }\n\n  ;\n\n  function updatePrivateNote(newNote, currentUser, alteredContactId) {\n    const oldContactsObj = currentUser.contacts;\n    const filteredContacts = oldContactsObj.filter(contact => contact.contactid !== alteredContactId);\n    const updatedContact = oldContactsObj.filter(contact => contact.contactid === alteredContactId);\n    updatedContact[0].privatenotes = newNote;\n    const newContactsObj = [...filteredContacts, updatedContact[0]];\n    fetch(`http://localhost:3000/users/${currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        contacts: newContactsObj\n      })\n    }).then(response => response.json()).then(data => handleUserUpdate(data));\n  }\n\n  ;\n\n  function updateCircle(newCircle, currentUser, alteredContactId) {\n    const oldContactsObj = currentUser.contacts;\n    const filteredContacts = oldContactsObj.filter(contact => contact.contactid !== alteredContactId);\n    const updatedContact = oldContactsObj.filter(contact => contact.contactid === alteredContactId);\n    updatedContact[0].circle = newCircle;\n    const newContactsObj = [...filteredContacts, updatedContact[0]];\n    fetch(`http://localhost:3000/users/${currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        contacts: newContactsObj\n      })\n    }).then(response => response.json()).then(data => handleUserUpdate(data));\n  }\n\n  ;\n\n  function deleteContact(currentUser, alteredContactId) {\n    const oldContactsObj = currentUser.contacts;\n    const filteredContacts = oldContactsObj.filter(contact => contact.contactid !== alteredContactId);\n    const newContactsObj = [...filteredContacts];\n    fetch(`http://localhost:3000/users/${currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        contacts: newContactsObj\n      })\n    }).then(response => response.json()).then(data => handleUserUpdate(data));\n  }\n\n  ;\n\n  function search(value) {\n    setSearchValue(value);\n    return history.push('/addcontact');\n  }\n\n  ;\n\n  function request(currentUser, targetUser, requestedCircle) {\n    const request = {\n      userid: currentUser.id,\n      name: currentUser.name,\n      pic: currentUser.pic,\n      reqcircle: requestedCircle\n    };\n    const newRequests = [...targetUser.requests, request];\n    fetch(`http://localhost:3000/users/${targetUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        requests: newRequests\n      })\n    }).then(response => response.json()).then(data => handleUserUpdate(data));\n  }\n\n  ;\n\n  function acceptRequest(currentUser, requestingUserId, currentUserCircle, requestedCircle) {\n    const currentUserObj = {\n      contactid: currentUser.id,\n      circle: requestedCircle,\n      privatenotes: \"\"\n    };\n    const requestingUserObj = {\n      contactid: requestingUserId,\n      circle: currentUserCircle,\n      privatenotes: \"\"\n    };\n    const requestingUser = userData.filter(user => user.id === requestingUserId);\n    const currentUserContacts = [...currentUser.contacts, requestingUserObj];\n    const requestingUserContacts = [...requestingUser[0].contacts, currentUserObj];\n    const currentUserRequests = currentUser.requests.filter(request => request.userid !== requestingUserId);\n    fetch(`http://localhost:3000/users/${requestingUserId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        contacts: requestingUserContacts\n      })\n    }).then(response => response.json()).then(data => handleUserUpdate(data));\n    fetch(`http://localhost:3000/users/${currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        requests: currentUserRequests,\n        contacts: currentUserContacts\n      })\n    }).then(response => response.json()).then(data => handleUserUpdate(data));\n  }\n\n  ;\n\n  function rejectRequest() {\n    return console.log(\"reject\");\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentUser: currentUser,\n      logOut: logOut,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          handleLogIn: handleLogIn,\n          userData: userData,\n          search: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contacts\",\n        children: /*#__PURE__*/_jsxDEV(ContactContainer, {\n          currentUser: currentUser,\n          userData: userData,\n          isLoaded: isLoaded,\n          updatePrivateNote: updatePrivateNote,\n          updateCircle: updateCircle,\n          deleteContact: deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mycard\",\n        children: /*#__PURE__*/_jsxDEV(MyContactCard, {\n          currentUser: currentUser,\n          handleUserUpdate: handleUserUpdate,\n          isLoaded: isLoaded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/requests\",\n        children: /*#__PURE__*/_jsxDEV(ContactRequests, {\n          currentUser: currentUser,\n          userData: userData,\n          isLoaded: isLoaded,\n          handleAccept: acceptRequest,\n          handleReject: rejectRequest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/addcontact\",\n        children: /*#__PURE__*/_jsxDEV(AddContact, {\n          currentUser: currentUser,\n          isLoaded: isLoaded,\n          userData: userData,\n          searchValue: searchValue,\n          handleRequest: request\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(SignUp, {\n          handleLogIn: handleLogIn,\n          handleSignUp: handleSignUp,\n          userData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"d7UW4XvR7enHfCoaPs836bmb34Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Switch","useHistory","About","AddContact","ContactContainer","ContactRequests","Header","Login","MyContactCard","SignUp","App","currentUser","setCurrentUser","userData","setUserData","isLoaded","setIsLoaded","searchValue","setSearchValue","history","fetch","then","response","json","data","issueAccess","accessUser","filter","user","access","undefined","handleLogIn","loggedUser","accessUsers","map","id","method","headers","Accept","body","JSON","stringify","handleUserUpdate","push","logOut","handleSignUp","updatedUser","filteredUserData","updateCurrentUser","updatedCurrentUserObj","updateUserData","updatePrivateNote","newNote","alteredContactId","oldContactsObj","contacts","filteredContacts","contact","contactid","updatedContact","privatenotes","newContactsObj","updateCircle","newCircle","circle","deleteContact","search","value","request","targetUser","requestedCircle","userid","name","pic","reqcircle","newRequests","requests","acceptRequest","requestingUserId","currentUserCircle","currentUserObj","requestingUserObj","requestingUser","currentUserContacts","requestingUserContacts","currentUserRequests","rejectRequest","console","log"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport About from \"./About.js\";\nimport AddContact from \"./AddContact.js\";\nimport ContactContainer from \"./ContactContainer.js\";\nimport ContactRequests from \"./ContactRequests.js\";\nimport Header from \"./Header.js\";\nimport Login from \"./Login.js\";\nimport MyContactCard from \"./MyContactCard.js\";\nimport SignUp from \"./SignUp.js\";\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState();\n    const [userData, setUserData] = useState();\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [searchValue, setSearchValue] = useState();\n\n    const history = useHistory(); \n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/users\")\n        .then((response) => response.json())\n        .then((data) => issueAccess(data))\n        .then(() => setIsLoaded(true))\n    }, []);\n\n    function issueAccess(data) {\n        setUserData(data);\n        const accessUser = data.filter((user) => user.access);\n        return accessUser !== undefined ? setCurrentUser(accessUser[0]) : setCurrentUser();\n    };\n\n    function handleLogIn(loggedUser) {\n        const accessUsers = userData.filter((user) => user.access === true)\n        accessUsers.map((user) => {\n            fetch(`http://localhost:3000/users/${user.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                    access: false\n                })\n            })\n        })\n        fetch(`http://localhost:3000/users/${loggedUser.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            },\n            body: JSON.stringify({\n                access: true\n            })\n        })\n        .then((response) => response.json())\n        .then((data) => handleUserUpdate(data))\n        .then(() => history.push('/mycard'))\n    };\n\n    function logOut() {\n        fetch(`http://localhost:3000/users/${currentUser.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            },\n            body: JSON.stringify({\n                access: false\n            })\n        })\n        history.push('/')\n        return setCurrentUser();\n    }\n\n    function handleSignUp(user) {\n        return setUserData([...userData, user]);\n    }\n\n    function handleUserUpdate(updatedUser) {\n        setCurrentUser(updatedUser);\n        const filteredUserData = userData.filter((user) => user.id !== updatedUser.id);\n        return setUserData([...filteredUserData, updatedUser]);\n    };\n\n    function updateCurrentUser(updatedCurrentUserObj) {\n        return setCurrentUser(updatedCurrentUserObj);\n    };\n\n    function updateUserData(updatedUser) {\n        const filteredUserData = userData.filter((user) => user.id !== updatedUser.id);\n        return setUserData([...filteredUserData, updatedUser]);\n    };\n\n    function updatePrivateNote(newNote, currentUser, alteredContactId) {\n        const oldContactsObj = currentUser.contacts;\n        const filteredContacts = oldContactsObj.filter((contact) => contact.contactid !== alteredContactId);\n        const updatedContact = oldContactsObj.filter((contact) => contact.contactid === alteredContactId);\n        updatedContact[0].privatenotes = newNote;\n        const newContactsObj = [...filteredContacts, updatedContact[0]];\n\n        fetch(`http://localhost:3000/users/${currentUser.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                    contacts: newContactsObj\n                })\n        })\n        .then((response) => response.json())\n        .then((data) => handleUserUpdate(data))\n    };\n\n    function updateCircle(newCircle, currentUser, alteredContactId) {\n        const oldContactsObj = currentUser.contacts;\n        const filteredContacts = oldContactsObj.filter((contact) => contact.contactid !== alteredContactId);\n        const updatedContact = oldContactsObj.filter((contact) => contact.contactid === alteredContactId);\n        updatedContact[0].circle = newCircle;\n        const newContactsObj = [...filteredContacts, updatedContact[0]];\n\n        fetch(`http://localhost:3000/users/${currentUser.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                    contacts: newContactsObj\n                })\n        })\n        .then((response) => response.json())\n        .then((data) => handleUserUpdate(data))\n    };\n\n    function deleteContact(currentUser, alteredContactId) {\n        const oldContactsObj = currentUser.contacts;\n        const filteredContacts = oldContactsObj.filter((contact) => contact.contactid !== alteredContactId);\n        const newContactsObj = [...filteredContacts];\n\n        fetch(`http://localhost:3000/users/${currentUser.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                    contacts: newContactsObj\n                })\n        })\n        .then((response) => response.json())\n        .then((data) => handleUserUpdate(data))\n    };\n\n    function search(value) {\n        setSearchValue(value);\n        return history.push('/addcontact');\n    };\n\n    function request(currentUser, targetUser, requestedCircle) {\n        const request = {\n            userid: currentUser.id,\n            name: currentUser.name,\n            pic: currentUser.pic,\n            reqcircle: requestedCircle\n        }\n        const newRequests = [...targetUser.requests, request]; \n        \n        fetch(`http://localhost:3000/users/${targetUser.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                    requests: newRequests\n                })\n        })\n        .then((response) => response.json())\n        .then((data) => handleUserUpdate(data))\n    };\n\n    function acceptRequest(currentUser, requestingUserId, currentUserCircle, requestedCircle) {\n        const currentUserObj = {contactid: currentUser.id, circle: requestedCircle, privatenotes: \"\"};\n        const requestingUserObj = {contactid: requestingUserId, circle: currentUserCircle, privatenotes: \"\"};\n        const requestingUser = userData.filter((user) => user.id === requestingUserId);\n        const currentUserContacts = [...currentUser.contacts, requestingUserObj];\n        const requestingUserContacts = [...requestingUser[0].contacts, currentUserObj];\n        const currentUserRequests = currentUser.requests.filter((request) => request.userid !== requestingUserId);\n        fetch(`http://localhost:3000/users/${requestingUserId}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                    contacts: requestingUserContacts\n                })\n        })\n        .then((response) => response.json())\n        .then((data) => handleUserUpdate(data))\n        fetch(`http://localhost:3000/users/${currentUser.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                    requests: currentUserRequests,\n                    contacts: currentUserContacts\n                })\n        })\n        .then((response) => response.json())\n        .then((data) => handleUserUpdate(data))\n    };\n\n    function rejectRequest() {\n        return console.log(\"reject\");\n    };\n\n    return (\n        <div>\n            <Header currentUser={currentUser} logOut={logOut} search={search} />\n            <Switch>\n                <Route path=\"/login\">\n                    <Login\n                        handleLogIn={handleLogIn}\n                        userData={userData}\n                        search={search}\n                    />\n                </Route>\n                <Route path=\"/contacts\">\n                    <ContactContainer\n                        currentUser={currentUser}\n                        userData={userData}\n                        isLoaded={isLoaded}\n                        updatePrivateNote={updatePrivateNote}\n                        updateCircle={updateCircle}\n                        deleteContact={deleteContact}\n                    />\n                </Route>\n                <Route path=\"/mycard\">\n                    <MyContactCard\n                        currentUser={currentUser}\n                        handleUserUpdate={handleUserUpdate}\n                        isLoaded={isLoaded}\n                    />\n                </Route>\n                <Route path=\"/requests\">\n                    <ContactRequests\n                        currentUser={currentUser}\n                        userData={userData}\n                        isLoaded={isLoaded}\n                        handleAccept={acceptRequest}\n                        handleReject={rejectRequest}\n                    />\n                </Route>\n                <Route path=\"/addcontact\">\n                    <AddContact\n                        currentUser={currentUser}\n                        isLoaded={isLoaded}\n                        userData={userData}\n                        searchValue={searchValue}\n                        handleRequest={request}\n                    />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUp\n                        handleLogIn={handleLogIn}\n                        handleSignUp={handleSignUp}\n                        userData={userData}\n                    />\n                </Route>\n                <Route path=\"/\">\n                    <About />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,EAA9C;EACA,MAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,EAAxC;EACA,MAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,EAA9C;EAEA,MAAMsB,OAAO,GAAGlB,UAAU,EAA1B;EAEAH,SAAS,CAAC,MAAM;IACZsB,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUC,WAAW,CAACD,IAAD,CAF3B,EAGCH,IAHD,CAGM,MAAML,WAAW,CAAC,IAAD,CAHvB;EAIH,CALQ,EAKN,EALM,CAAT;;EAOA,SAASS,WAAT,CAAqBD,IAArB,EAA2B;IACvBV,WAAW,CAACU,IAAD,CAAX;IACA,MAAME,UAAU,GAAGF,IAAI,CAACG,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,MAA3B,CAAnB;IACA,OAAOH,UAAU,KAAKI,SAAf,GAA2BlB,cAAc,CAACc,UAAU,CAAC,CAAD,CAAX,CAAzC,GAA2Dd,cAAc,EAAhF;EACH;;EAAA;;EAED,SAASmB,WAAT,CAAqBC,UAArB,EAAiC;IAC7B,MAAMC,WAAW,GAAGpB,QAAQ,CAACc,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgB,IAA1C,CAApB;IACAI,WAAW,CAACC,GAAZ,CAAiBN,IAAD,IAAU;MACtBR,KAAK,CAAE,+BAA8BQ,IAAI,CAACO,EAAG,EAAxC,EAA2C;QAC5CC,MAAM,EAAE,OADoC;QAE5CC,OAAO,EAAE;UACL,gBAAgB,kBADX;UAELC,MAAM,EAAE;QAFH,CAFmC;QAM5CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACjBZ,MAAM,EAAE;QADS,CAAf;MANsC,CAA3C,CAAL;IAUH,CAXD;IAYAT,KAAK,CAAE,+BAA8BY,UAAU,CAACG,EAAG,EAA9C,EAAiD;MAClDC,MAAM,EAAE,OAD0C;MAElDC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH,CAFyC;MAMlDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBZ,MAAM,EAAE;MADS,CAAf;IAN4C,CAAjD,CAAL,CAUCR,IAVD,CAUOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVpB,EAWCF,IAXD,CAWOG,IAAD,IAAUkB,gBAAgB,CAAClB,IAAD,CAXhC,EAYCH,IAZD,CAYM,MAAMF,OAAO,CAACwB,IAAR,CAAa,SAAb,CAZZ;EAaH;;EAAA;;EAED,SAASC,MAAT,GAAkB;IACdxB,KAAK,CAAE,+BAA8BT,WAAW,CAACwB,EAAG,EAA/C,EAAkD;MACnDC,MAAM,EAAE,OAD2C;MAEnDC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH,CAF0C;MAMnDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBZ,MAAM,EAAE;MADS,CAAf;IAN6C,CAAlD,CAAL;IAUAV,OAAO,CAACwB,IAAR,CAAa,GAAb;IACA,OAAO/B,cAAc,EAArB;EACH;;EAED,SAASiC,YAAT,CAAsBjB,IAAtB,EAA4B;IACxB,OAAOd,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAce,IAAd,CAAD,CAAlB;EACH;;EAED,SAASc,gBAAT,CAA0BI,WAA1B,EAAuC;IACnClC,cAAc,CAACkC,WAAD,CAAd;IACA,MAAMC,gBAAgB,GAAGlC,QAAQ,CAACc,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYW,WAAW,CAACX,EAAlD,CAAzB;IACA,OAAOrB,WAAW,CAAC,CAAC,GAAGiC,gBAAJ,EAAsBD,WAAtB,CAAD,CAAlB;EACH;;EAAA;;EAED,SAASE,iBAAT,CAA2BC,qBAA3B,EAAkD;IAC9C,OAAOrC,cAAc,CAACqC,qBAAD,CAArB;EACH;;EAAA;;EAED,SAASC,cAAT,CAAwBJ,WAAxB,EAAqC;IACjC,MAAMC,gBAAgB,GAAGlC,QAAQ,CAACc,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYW,WAAW,CAACX,EAAlD,CAAzB;IACA,OAAOrB,WAAW,CAAC,CAAC,GAAGiC,gBAAJ,EAAsBD,WAAtB,CAAD,CAAlB;EACH;;EAAA;;EAED,SAASK,iBAAT,CAA2BC,OAA3B,EAAoCzC,WAApC,EAAiD0C,gBAAjD,EAAmE;IAC/D,MAAMC,cAAc,GAAG3C,WAAW,CAAC4C,QAAnC;IACA,MAAMC,gBAAgB,GAAGF,cAAc,CAAC3B,MAAf,CAAuB8B,OAAD,IAAaA,OAAO,CAACC,SAAR,KAAsBL,gBAAzD,CAAzB;IACA,MAAMM,cAAc,GAAGL,cAAc,CAAC3B,MAAf,CAAuB8B,OAAD,IAAaA,OAAO,CAACC,SAAR,KAAsBL,gBAAzD,CAAvB;IACAM,cAAc,CAAC,CAAD,CAAd,CAAkBC,YAAlB,GAAiCR,OAAjC;IACA,MAAMS,cAAc,GAAG,CAAC,GAAGL,gBAAJ,EAAsBG,cAAc,CAAC,CAAD,CAApC,CAAvB;IAEAvC,KAAK,CAAE,+BAA8BT,WAAW,CAACwB,EAAG,EAA/C,EAAkD;MAC/CC,MAAM,EAAE,OADuC;MAE/CC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH,CAFsC;MAM/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBc,QAAQ,EAAEM;MADO,CAAf;IANyC,CAAlD,CAAL,CAUCxC,IAVD,CAUOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVpB,EAWCF,IAXD,CAWOG,IAAD,IAAUkB,gBAAgB,CAAClB,IAAD,CAXhC;EAYH;;EAAA;;EAED,SAASsC,YAAT,CAAsBC,SAAtB,EAAiCpD,WAAjC,EAA8C0C,gBAA9C,EAAgE;IAC5D,MAAMC,cAAc,GAAG3C,WAAW,CAAC4C,QAAnC;IACA,MAAMC,gBAAgB,GAAGF,cAAc,CAAC3B,MAAf,CAAuB8B,OAAD,IAAaA,OAAO,CAACC,SAAR,KAAsBL,gBAAzD,CAAzB;IACA,MAAMM,cAAc,GAAGL,cAAc,CAAC3B,MAAf,CAAuB8B,OAAD,IAAaA,OAAO,CAACC,SAAR,KAAsBL,gBAAzD,CAAvB;IACAM,cAAc,CAAC,CAAD,CAAd,CAAkBK,MAAlB,GAA2BD,SAA3B;IACA,MAAMF,cAAc,GAAG,CAAC,GAAGL,gBAAJ,EAAsBG,cAAc,CAAC,CAAD,CAApC,CAAvB;IAEAvC,KAAK,CAAE,+BAA8BT,WAAW,CAACwB,EAAG,EAA/C,EAAkD;MAC/CC,MAAM,EAAE,OADuC;MAE/CC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH,CAFsC;MAM/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBc,QAAQ,EAAEM;MADO,CAAf;IANyC,CAAlD,CAAL,CAUCxC,IAVD,CAUOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVpB,EAWCF,IAXD,CAWOG,IAAD,IAAUkB,gBAAgB,CAAClB,IAAD,CAXhC;EAYH;;EAAA;;EAED,SAASyC,aAAT,CAAuBtD,WAAvB,EAAoC0C,gBAApC,EAAsD;IAClD,MAAMC,cAAc,GAAG3C,WAAW,CAAC4C,QAAnC;IACA,MAAMC,gBAAgB,GAAGF,cAAc,CAAC3B,MAAf,CAAuB8B,OAAD,IAAaA,OAAO,CAACC,SAAR,KAAsBL,gBAAzD,CAAzB;IACA,MAAMQ,cAAc,GAAG,CAAC,GAAGL,gBAAJ,CAAvB;IAEApC,KAAK,CAAE,+BAA8BT,WAAW,CAACwB,EAAG,EAA/C,EAAkD;MAC/CC,MAAM,EAAE,OADuC;MAE/CC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH,CAFsC;MAM/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBc,QAAQ,EAAEM;MADO,CAAf;IANyC,CAAlD,CAAL,CAUCxC,IAVD,CAUOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVpB,EAWCF,IAXD,CAWOG,IAAD,IAAUkB,gBAAgB,CAAClB,IAAD,CAXhC;EAYH;;EAAA;;EAED,SAAS0C,MAAT,CAAgBC,KAAhB,EAAuB;IACnBjD,cAAc,CAACiD,KAAD,CAAd;IACA,OAAOhD,OAAO,CAACwB,IAAR,CAAa,aAAb,CAAP;EACH;;EAAA;;EAED,SAASyB,OAAT,CAAiBzD,WAAjB,EAA8B0D,UAA9B,EAA0CC,eAA1C,EAA2D;IACvD,MAAMF,OAAO,GAAG;MACZG,MAAM,EAAE5D,WAAW,CAACwB,EADR;MAEZqC,IAAI,EAAE7D,WAAW,CAAC6D,IAFN;MAGZC,GAAG,EAAE9D,WAAW,CAAC8D,GAHL;MAIZC,SAAS,EAAEJ;IAJC,CAAhB;IAMA,MAAMK,WAAW,GAAG,CAAC,GAAGN,UAAU,CAACO,QAAf,EAAyBR,OAAzB,CAApB;IAEAhD,KAAK,CAAE,+BAA8BiD,UAAU,CAAClC,EAAG,EAA9C,EAAiD;MAC9CC,MAAM,EAAE,OADsC;MAE9CC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH,CAFqC;MAM9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBmC,QAAQ,EAAED;MADO,CAAf;IANwC,CAAjD,CAAL,CAUCtD,IAVD,CAUOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVpB,EAWCF,IAXD,CAWOG,IAAD,IAAUkB,gBAAgB,CAAClB,IAAD,CAXhC;EAYH;;EAAA;;EAED,SAASqD,aAAT,CAAuBlE,WAAvB,EAAoCmE,gBAApC,EAAsDC,iBAAtD,EAAyET,eAAzE,EAA0F;IACtF,MAAMU,cAAc,GAAG;MAACtB,SAAS,EAAE/C,WAAW,CAACwB,EAAxB;MAA4B6B,MAAM,EAAEM,eAApC;MAAqDV,YAAY,EAAE;IAAnE,CAAvB;IACA,MAAMqB,iBAAiB,GAAG;MAACvB,SAAS,EAAEoB,gBAAZ;MAA8Bd,MAAM,EAAEe,iBAAtC;MAAyDnB,YAAY,EAAE;IAAvE,CAA1B;IACA,MAAMsB,cAAc,GAAGrE,QAAQ,CAACc,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAY2C,gBAAtC,CAAvB;IACA,MAAMK,mBAAmB,GAAG,CAAC,GAAGxE,WAAW,CAAC4C,QAAhB,EAA0B0B,iBAA1B,CAA5B;IACA,MAAMG,sBAAsB,GAAG,CAAC,GAAGF,cAAc,CAAC,CAAD,CAAd,CAAkB3B,QAAtB,EAAgCyB,cAAhC,CAA/B;IACA,MAAMK,mBAAmB,GAAG1E,WAAW,CAACiE,QAAZ,CAAqBjD,MAArB,CAA6ByC,OAAD,IAAaA,OAAO,CAACG,MAAR,KAAmBO,gBAA5D,CAA5B;IACA1D,KAAK,CAAE,+BAA8B0D,gBAAiB,EAAjD,EAAoD;MACjD1C,MAAM,EAAE,OADyC;MAEjDC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH,CAFwC;MAMjDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBc,QAAQ,EAAE6B;MADO,CAAf;IAN2C,CAApD,CAAL,CAUC/D,IAVD,CAUOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVpB,EAWCF,IAXD,CAWOG,IAAD,IAAUkB,gBAAgB,CAAClB,IAAD,CAXhC;IAYAJ,KAAK,CAAE,+BAA8BT,WAAW,CAACwB,EAAG,EAA/C,EAAkD;MAC/CC,MAAM,EAAE,OADuC;MAE/CC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELC,MAAM,EAAE;MAFH,CAFsC;MAM/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBmC,QAAQ,EAAES,mBADO;QAEjB9B,QAAQ,EAAE4B;MAFO,CAAf;IANyC,CAAlD,CAAL,CAWC9D,IAXD,CAWOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAXpB,EAYCF,IAZD,CAYOG,IAAD,IAAUkB,gBAAgB,CAAClB,IAAD,CAZhC;EAaH;;EAAA;;EAED,SAAS8D,aAAT,GAAyB;IACrB,OAAOC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAP;EACH;;EAAA;EAED,oBACI;IAAA,wBACI,QAAC,MAAD;MAAQ,WAAW,EAAE7E,WAArB;MAAkC,MAAM,EAAEiC,MAA1C;MAAkD,MAAM,EAAEsB;IAA1D;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MAAA,wBACI,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAA,uBACI,QAAC,KAAD;UACI,WAAW,EAAEnC,WADjB;UAEI,QAAQ,EAAElB,QAFd;UAGI,MAAM,EAAEqD;QAHZ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAA,uBACI,QAAC,gBAAD;UACI,WAAW,EAAEvD,WADjB;UAEI,QAAQ,EAAEE,QAFd;UAGI,QAAQ,EAAEE,QAHd;UAII,iBAAiB,EAAEoC,iBAJvB;UAKI,YAAY,EAAEW,YALlB;UAMI,aAAa,EAAEG;QANnB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QARJ,eAkBI,QAAC,KAAD;QAAO,IAAI,EAAC,SAAZ;QAAA,uBACI,QAAC,aAAD;UACI,WAAW,EAAEtD,WADjB;UAEI,gBAAgB,EAAE+B,gBAFtB;UAGI,QAAQ,EAAE3B;QAHd;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAlBJ,eAyBI,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAA,uBACI,QAAC,eAAD;UACI,WAAW,EAAEJ,WADjB;UAEI,QAAQ,EAAEE,QAFd;UAGI,QAAQ,EAAEE,QAHd;UAII,YAAY,EAAE8D,aAJlB;UAKI,YAAY,EAAES;QALlB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAzBJ,eAkCI,QAAC,KAAD;QAAO,IAAI,EAAC,aAAZ;QAAA,uBACI,QAAC,UAAD;UACI,WAAW,EAAE3E,WADjB;UAEI,QAAQ,EAAEI,QAFd;UAGI,QAAQ,EAAEF,QAHd;UAII,WAAW,EAAEI,WAJjB;UAKI,aAAa,EAAEmD;QALnB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAlCJ,eA2CI,QAAC,KAAD;QAAO,IAAI,EAAC,SAAZ;QAAA,uBACI,QAAC,MAAD;UACI,WAAW,EAAErC,WADjB;UAEI,YAAY,EAAEc,YAFlB;UAGI,QAAQ,EAAEhC;QAHd;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QA3CJ,eAkDI,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAA,uBACI,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAlDJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2DH;;GA9QQH,G;UAMWT,U;;;KANXS,G;AAgRT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}