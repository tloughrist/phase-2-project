{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\nimport Banner from \"./Banner/Banner.js\";\nimport PersonalInfo from \"./PersonalInfo.js\";\nimport Formations from \"./Formations/Formations.js\";\nimport Home from \"./Home.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [userData, setUserData] = useState();\n  const [token, setToken] = useState(\"unchecked\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const history = useHistory();\n  const initialLoad = useEffect(() => {\n    return fetch(\"http://localhost:3000/users\").then(response => response.json()).then(data => setUserData(data)).then(() => setIsLoaded(true));\n  }, []);\n  Promise.all([initialLoad]).then(() => getToken());\n  useEffect(() => {\n    if (currentUser) {\n      removeInvalidFormations();\n      return removeInvalidInvitations();\n    } else {\n      return;\n    }\n  }, [token]);\n\n  function getToken() {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n\n    if (userData) {\n      if (userToken) {\n        const returningUser = userData.filter(user => user.token.username === userToken.username && user.token.password === userToken.password);\n        setCurrentUser(returningUser[0]);\n        return returningUser.length > 0 ? setToken(\"valid\") : setToken(\"invalid\");\n      } else {\n        return setToken(\"invalid\");\n      }\n    } else {\n      return setToken(\"unchecked\");\n    }\n  }\n\n  ;\n\n  function login(userObj) {\n    setCurrentUser(userObj);\n    sessionStorage.setItem('token', JSON.stringify(userObj.token));\n    setToken(\"valid\");\n    return history.push(\"/personalinfo\");\n  }\n\n  ;\n\n  function removeInvalidFormations() {\n    if (currentUser.formations.length > 0) {\n      const validFormations = currentUser.formations.filter(el1 => {\n        const formationOwner = userData.find(el2 => el2.id === el1.admin);\n        const ownerFormationIdArr = formationOwner.formations.map(el2 => el2.id);\n        return ownerFormationIdArr.includes(el1.id);\n      });\n      return patchCurrentUser({\n        formations: validFormations\n      });\n    } else {\n      return;\n    }\n  }\n\n  ;\n\n  function removeInvalidInvitations() {\n    if (currentUser.invitations.length > 0) {\n      const validInvitations = currentUser.invitations.filter(el1 => {\n        const formationOwner = userData.find(el2 => el2.id === el1.admin);\n        const ownerFormationIdArr = formationOwner.formations.map(el2 => el2.id);\n        return ownerFormationIdArr.includes(el1.id);\n      });\n      console.log(validInvitations);\n      return patchCurrentUser({\n        invitations: validInvitations\n      });\n    } else {\n      return;\n    }\n  }\n\n  ;\n\n  function logout() {\n    sessionStorage.clear();\n    setToken(\"invalid\");\n    setCurrentUser();\n    return history.push(\"/\");\n  }\n\n  ;\n\n  function patchCurrentUser(patchObj) {\n    return fetch(`http://localhost:3000/users/${currentUser.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(patchObj)\n    }).then(response => response.json()).then(data => updateCurrentUser(data));\n  }\n\n  ;\n\n  function patchUser(userId, patchObj) {\n    return fetch(`http://localhost:3000/users/${userId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(patchObj)\n    }).then(response => response.json()).then(data => updateUserData(data));\n  }\n\n  ;\n\n  function updateUserData(userObj) {\n    const userDataSans = userData.filter(el => el.id !== userObj.id);\n    return setUserData([...userDataSans, userObj]);\n  }\n\n  ;\n\n  function updateCurrentUser(userObj) {\n    updateUserData(userObj);\n    return setCurrentUser(userObj);\n  }\n\n  ;\n\n  function sendInvite(formationObj, user, sender) {\n    const formationSubscriberObj = {\n      name: formationObj.name,\n      color: formationObj.color,\n      image: formationObj.image,\n      id: formationObj.id,\n      owner: `${sender.name} (${sender.token.username})`,\n      admin: sender.id\n    };\n    const sansInvitations = user.invitations.filter(el => el.id !== formationObj.id);\n    const newInvitationsArr = [...sansInvitations, formationSubscriberObj];\n    return patchUser(user.id, {\n      invitations: newInvitationsArr\n    });\n  }\n\n  ;\n\n  function rejectInvitation(invitationId) {\n    const sansCurrentUserInvitations = currentUser.invitations.filter(el => el.id !== invitationId);\n    return patchCurrentUser({\n      invitations: sansCurrentUserInvitations\n    });\n  }\n\n  ;\n\n  function acceptInvitation(newFormationObj) {\n    return handleSenderAcceptInvite(newFormationObj).then(() => handleCurrentUserAcceptInvite(newFormationObj));\n  }\n\n  ;\n\n  function handleCurrentUserAcceptInvite(newFormationObj) {\n    const sansCurrentUserInvitations = currentUser.invitations.filter(el => el.id !== newFormationObj.id);\n    return patchCurrentUser({\n      invitations: sansCurrentUserInvitations\n    }).then(() => {\n      const newCurrentUserFormations = [...currentUser.formations, newFormationObj];\n      return patchCurrentUser({\n        formations: newCurrentUserFormations\n      });\n    });\n  }\n\n  ;\n\n  function handleSenderAcceptInvite(newFormationObj) {\n    const sender = userData.find(el => el.id === newFormationObj.admin);\n    const sansSenderFormations = sender.formations.filter(el => el.id !== newFormationObj.id);\n    const senderCurrentFormation = sender.formations.find(el => el.id === newFormationObj.id);\n    senderCurrentFormation.users = [...senderCurrentFormation.users, currentUser.id];\n    const newSenderFormationsArr = [...sansSenderFormations, senderCurrentFormation];\n    return patchUser(sender.id, {\n      formations: newSenderFormationsArr\n    });\n  }\n\n  ;\n\n  function rejectRequest(requestId) {\n    const sansCurrentUserRequests = currentUser.requests.filter(el => el.id !== requestId);\n    return patchCurrentUser({\n      requests: sansCurrentUserRequests\n    });\n  }\n\n  ;\n\n  function acceptRequest(newFormationObj) {\n    return handleSenderAccept(newFormationObj).then(() => handleCurrentUserAccept(newFormationObj));\n  }\n\n  ;\n\n  function handleCurrentUserAcceptRequest(newFormationObj) {\n    const sansCurrentUserInvitations = currentUser.invitations.filter(el => el.id !== newFormationObj.id);\n    return patchCurrentUser({\n      invitations: sansCurrentUserInvitations\n    }).then(() => {\n      const newCurrentUserFormations = [...currentUser.formations, newFormationObj];\n      return patchCurrentUser({\n        formations: newCurrentUserFormations\n      });\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      token: token,\n      logout: logout,\n      isLoaded: isLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          userData: userData,\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/formations\",\n        children: /*#__PURE__*/_jsxDEV(Formations, {\n          currentUser: currentUser,\n          token: token,\n          patchCurrentUser: patchCurrentUser,\n          updateCurrentUser: updateCurrentUser,\n          userData: userData,\n          updateUserData: updateUserData,\n          sendInvite: sendInvite,\n          rejectInvitation: rejectInvitation,\n          acceptInvitation: acceptInvitation,\n          patchUser: patchUser,\n          isLoaded: isLoaded,\n          sendRequest: sendRequest,\n          rejectRequest: rejectRequest,\n          acceptRequest: acceptRequest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/personalinfo\",\n        children: /*#__PURE__*/_jsxDEV(PersonalInfo, {\n          currentUser: currentUser,\n          token: token,\n          patchCurrentUser: patchCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(SignUp, {\n          userData: userData,\n          login: login,\n          updateUserData: updateUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"2wOW492TVt1UYjXAu0oo7jPA/hQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Switch","useHistory","Login","SignUp","Banner","PersonalInfo","Formations","Home","App","currentUser","setCurrentUser","userData","setUserData","token","setToken","isLoaded","setIsLoaded","history","initialLoad","fetch","then","response","json","data","Promise","all","getToken","removeInvalidFormations","removeInvalidInvitations","tokenString","sessionStorage","getItem","userToken","JSON","parse","returningUser","filter","user","username","password","length","login","userObj","setItem","stringify","push","formations","validFormations","el1","formationOwner","find","el2","id","admin","ownerFormationIdArr","map","includes","patchCurrentUser","invitations","validInvitations","console","log","logout","clear","patchObj","method","headers","body","updateCurrentUser","patchUser","userId","updateUserData","userDataSans","el","sendInvite","formationObj","sender","formationSubscriberObj","name","color","image","owner","sansInvitations","newInvitationsArr","rejectInvitation","invitationId","sansCurrentUserInvitations","acceptInvitation","newFormationObj","handleSenderAcceptInvite","handleCurrentUserAcceptInvite","newCurrentUserFormations","sansSenderFormations","senderCurrentFormation","users","newSenderFormationsArr","rejectRequest","requestId","sansCurrentUserRequests","requests","acceptRequest","handleSenderAccept","handleCurrentUserAccept","handleCurrentUserAcceptRequest","sendRequest"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\nimport Banner from \"./Banner/Banner.js\";\nimport PersonalInfo from \"./PersonalInfo.js\";\nimport Formations from \"./Formations/Formations.js\";\nimport Home from \"./Home.js\";\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState();\n    const [userData, setUserData] = useState();\n    const [token, setToken] = useState(\"unchecked\");\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const history = useHistory();\n\n    const initialLoad = useEffect(() => {\n        return fetch(\"http://localhost:3000/users\")\n        .then((response) => response.json())\n        .then((data) => setUserData(data))\n        .then(() => setIsLoaded(true))\n    }, []);\n\n    Promise.all([initialLoad])\n    .then(() => getToken());\n\n    useEffect(() => {\n        if (currentUser) {\n            removeInvalidFormations();\n            return removeInvalidInvitations();\n        } else {\n            return;\n        }\n    }, [token])\n\n    function getToken() {\n        const tokenString = sessionStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        if (userData) {\n            if (userToken) {\n                const returningUser = userData.filter((user) => user.token.username === userToken.username && user.token.password === userToken.password);\n                setCurrentUser(returningUser[0]);\n                return returningUser.length > 0 ? setToken(\"valid\") : setToken(\"invalid\");\n            } else {\n                return setToken(\"invalid\");\n            }\n        } else {\n            return setToken(\"unchecked\");\n        }\n    };\n\n    function login(userObj) {\n        setCurrentUser(userObj);\n        sessionStorage.setItem('token', JSON.stringify(userObj.token));\n        setToken(\"valid\");\n        return history.push(\"/personalinfo\");\n    };\n\n    function removeInvalidFormations() {\n        if (currentUser.formations.length > 0) {\n            const validFormations = currentUser.formations.filter((el1) => {\n                const formationOwner = userData.find((el2) => el2.id === el1.admin);\n                const ownerFormationIdArr = formationOwner.formations.map((el2) => el2.id);\n                return ownerFormationIdArr.includes(el1.id);\n            })\n            return patchCurrentUser({formations: validFormations});\n        } else {\n            return;\n        }\n    };\n\n    function removeInvalidInvitations() {\n        if (currentUser.invitations.length > 0) {\n            const validInvitations = currentUser.invitations.filter((el1) => {\n                const formationOwner = userData.find((el2) => el2.id === el1.admin);\n                const ownerFormationIdArr = formationOwner.formations.map((el2) => el2.id);\n                return ownerFormationIdArr.includes(el1.id);\n            })\n            console.log(validInvitations);\n            return patchCurrentUser({invitations: validInvitations});\n        } else {\n            return;\n        }\n    };\n\n    function logout() {\n        sessionStorage.clear();\n        setToken(\"invalid\");\n        setCurrentUser();\n        return history.push(\"/\");\n    };\n\n    function patchCurrentUser(patchObj) {\n        return fetch(`http://localhost:3000/users/${currentUser.id}`, {\n                method: 'PATCH',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(patchObj)\n            })\n        .then((response) => response.json())\n        .then((data) => updateCurrentUser(data));\n    };\n\n    function patchUser(userId, patchObj) {\n        return fetch(`http://localhost:3000/users/${userId}`, {\n                method: 'PATCH',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(patchObj)\n            })\n        .then((response) => response.json())\n        .then((data) => updateUserData(data));\n    };\n    \n    function updateUserData(userObj) {\n        const userDataSans = userData.filter((el) => el.id !==userObj.id);\n        return setUserData([...userDataSans, userObj]);\n    };\n\n    function updateCurrentUser(userObj) {\n        updateUserData(userObj)\n        return setCurrentUser(userObj);\n    };\n\n    function sendInvite(formationObj, user, sender) {\n        const formationSubscriberObj = {\n            name: formationObj.name,\n            color: formationObj.color,\n            image: formationObj.image,\n            id: formationObj.id,\n            owner: `${sender.name} (${sender.token.username})`,\n            admin: sender.id\n        };\n        const sansInvitations = user.invitations.filter((el) => el.id !== formationObj.id);\n        const newInvitationsArr = [...sansInvitations, formationSubscriberObj]\n        return patchUser(user.id, {invitations: newInvitationsArr});\n    };\n\n    function rejectInvitation(invitationId) {\n        const sansCurrentUserInvitations = currentUser.invitations.filter((el) => el.id !== invitationId);\n        return patchCurrentUser({invitations: sansCurrentUserInvitations});\n    };\n\n    function acceptInvitation(newFormationObj) {\n        return handleSenderAcceptInvite(newFormationObj)\n        .then(() => handleCurrentUserAcceptInvite(newFormationObj));\n    };\n\n    function handleCurrentUserAcceptInvite(newFormationObj) {\n        const sansCurrentUserInvitations = currentUser.invitations.filter((el) => el.id !== newFormationObj.id);\n        return patchCurrentUser({invitations: sansCurrentUserInvitations})\n        .then(() => {\n            const newCurrentUserFormations = [...currentUser.formations, newFormationObj];\n            return patchCurrentUser({formations: newCurrentUserFormations})\n        });\n    };\n\n    function handleSenderAcceptInvite(newFormationObj) {\n        const sender = userData.find((el) => el.id === newFormationObj.admin);\n        const sansSenderFormations = sender.formations.filter((el) => el.id !== newFormationObj.id);\n        const senderCurrentFormation = sender.formations.find((el) => el.id === newFormationObj.id);\n        senderCurrentFormation.users = [...senderCurrentFormation.users, currentUser.id];\n        const newSenderFormationsArr = [...sansSenderFormations, senderCurrentFormation];\n        return patchUser(sender.id, {formations: newSenderFormationsArr});\n    };\n\n    function rejectRequest(requestId) {\n        const sansCurrentUserRequests = currentUser.requests.filter((el) => el.id !== requestId);\n        return patchCurrentUser({requests: sansCurrentUserRequests});\n    };\n\n    function acceptRequest(newFormationObj) {\n        return handleSenderAccept(newFormationObj)\n        .then(() => handleCurrentUserAccept(newFormationObj));\n    };\n\n    function handleCurrentUserAcceptRequest(newFormationObj) {\n        const sansCurrentUserInvitations = currentUser.invitations.filter((el) => el.id !== newFormationObj.id);\n        return patchCurrentUser({invitations: sansCurrentUserInvitations})\n        .then(() => {\n            const newCurrentUserFormations = [...currentUser.formations, newFormationObj];\n            return patchCurrentUser({formations: newCurrentUserFormations})\n        });\n    };\n\n    \n\n    return (\n        <div>\n            <Banner\n                token={token}\n                logout={logout}\n                isLoaded={isLoaded}\n            />\n            <Switch>\n                <Route path=\"/login\">\n                    <Login\n                        userData={userData}\n                        login={login}\n                    />\n                </Route>\n                <Route path=\"/formations\">\n                    <Formations\n                        currentUser={currentUser}\n                        token={token}\n                        patchCurrentUser={patchCurrentUser}\n                        updateCurrentUser={updateCurrentUser}\n                        userData={userData}\n                        updateUserData={updateUserData}\n                        sendInvite={sendInvite}\n                        rejectInvitation={rejectInvitation}\n                        acceptInvitation={acceptInvitation}\n                        patchUser={patchUser}\n                        isLoaded={isLoaded}\n                        sendRequest={sendRequest}\n                        rejectRequest={rejectRequest}\n                        acceptRequest={acceptRequest}\n                    />\n                </Route>\n                <Route path=\"/personalinfo\">\n                    <PersonalInfo\n                        currentUser={currentUser}\n                        token={token}\n                        patchCurrentUser={patchCurrentUser}\n                    />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUp\n                        userData={userData}\n                        login={login}\n                        updateUserData={updateUserData}\n                    />\n                </Route>\n                <Route path=\"/\">\n                    <Home\n                    />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}