{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Formations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport MyFormations from \"./MyFormations.js\";\nimport NewFormation from \"./NewFormation.js\";\nimport FormationBar from \"./FormationBar.js\";\nimport Invitations from \"./Invitations.js\";\nimport FormationRequests from \"./FormationRequests.js\";\nimport FormationUsers from \"./FormationUsers.js\";\nimport FormationInfo from \"./FormationInfo.js\";\nimport FormationSettings from \"./FormationSettings.js\";\nimport Users from \"./Users.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Formations(_ref) {\n  _s();\n\n  let {\n    token,\n    currentUser,\n    patchCurrentUser,\n    updateCurrentUser,\n    userData,\n    updateUserData,\n    sendInvite,\n    rejectInvitation,\n    acceptInvitation,\n    patchUser,\n    isLoaded,\n    sendRequest\n  } = _ref;\n  const [searchValue, setSearchValue] = useState(\"\");\n  const history = useHistory();\n\n  if (token === \"valid\") {\n    const formationUsers = currentUser.formations.map(formation => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${formation.id}/users`,\n        children: /*#__PURE__*/_jsxDEV(FormationUsers, {\n          currentUser: currentUser,\n          userData: userData,\n          formation: formation,\n          patchCurrentUser: patchCurrentUser,\n          patchUser: patchUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, `${formation.id}users`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    });\n    const formationInfo = currentUser.formations.map(formation => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${formation.id}/info`,\n        children: /*#__PURE__*/_jsxDEV(FormationInfo, {\n          currentUser: currentUser,\n          formation: formation,\n          token: token,\n          patchCurrentUser: patchCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, `${formation.id}info`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    });\n    const formationSettings = currentUser.formations.map(formation => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${formation.id}/settings`,\n        children: /*#__PURE__*/_jsxDEV(FormationSettings, {\n          currentUser: currentUser,\n          formation: formation,\n          patchCurrentUser: patchCurrentUser,\n          updateCurrentUser: updateCurrentUser,\n          userData: userData,\n          updateUserData: updateUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, `${formation.id}settings`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    });\n    const formationRequests = currentUser.formations.map(formation => {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/formations/${formation.id}/requests`,\n        children: /*#__PURE__*/_jsxDEV(FormationRequests, {\n          currentUser: currentUser,\n          formation: formation,\n          patchCurrentUser: patchCurrentUser,\n          updateCurrentUser: updateCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, `${formation.id}requests`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    });\n\n    function getSearchValue(mode, value) {\n      setSearchValue(value);\n\n      if (mode === \"formation\") {\n        return history.push(\"/formations\");\n      } else if (mode === \"user\") {\n        return history.push(\"/formations/users\");\n      }\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Formations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormationBar, {\n        getSearchValue: getSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/invitations\",\n          children: /*#__PURE__*/_jsxDEV(Invitations, {\n            currentUser: currentUser,\n            rejectInvitation: rejectInvitation,\n            acceptInvitation: acceptInvitation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/newformation\",\n          children: /*#__PURE__*/_jsxDEV(NewFormation, {\n            currentUser: currentUser,\n            patchCurrentUser: patchCurrentUser,\n            updateCurrentUser: updateCurrentUser,\n            userData: userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations/users\",\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            userData: userData,\n            currentUser: currentUser,\n            searchValue: searchValue,\n            sendInvite: sendInvite,\n            sendRequest: sendRequest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), formationUsers, formationInfo, formationRequests, formationSettings, /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/formations\",\n          children: /*#__PURE__*/_jsxDEV(MyFormations, {\n            currentUser: currentUser,\n            searchValue: searchValue,\n            userData: userData,\n            patchCurrentUser: patchCurrentUser,\n            isLoaded: isLoaded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  } else if (token === \"invalid\") {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Formations, \"mzSH3jUo/0O8IfuPeNJvJKpEIKg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Formations;\n;\nexport default Formations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formations\");","map":{"version":3,"names":["React","useState","useEffect","Redirect","Route","Switch","useHistory","MyFormations","NewFormation","FormationBar","Invitations","FormationRequests","FormationUsers","FormationInfo","FormationSettings","Users","Formations","token","currentUser","patchCurrentUser","updateCurrentUser","userData","updateUserData","sendInvite","rejectInvitation","acceptInvitation","patchUser","isLoaded","sendRequest","searchValue","setSearchValue","history","formationUsers","formations","map","formation","id","formationInfo","formationSettings","formationRequests","getSearchValue","mode","value","push"],"sources":["/home/timloughrist/Code/flatiron/phase-02/phase-2-project/src/components/Formations/Formations.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport MyFormations from \"./MyFormations.js\";\nimport NewFormation from \"./NewFormation.js\";\nimport FormationBar from \"./FormationBar.js\";\nimport Invitations from \"./Invitations.js\";\nimport FormationRequests from \"./FormationRequests.js\";\nimport FormationUsers from \"./FormationUsers.js\";\nimport FormationInfo from \"./FormationInfo.js\";\nimport FormationSettings from \"./FormationSettings.js\";\nimport Users from \"./Users.js\";\n\nfunction Formations({ token, currentUser, patchCurrentUser, updateCurrentUser, userData, updateUserData, sendInvite, rejectInvitation, acceptInvitation, patchUser, isLoaded, sendRequest }) {\n\n    const [searchValue, setSearchValue] = useState(\"\");\n    const history = useHistory();\n\n    if (token === \"valid\") {\n\n        const formationUsers = currentUser.formations.map((formation) => {\n            return (\n                <Route key={`${formation.id}users`} path={`/formations/${formation.id}/users`}>\n                    <FormationUsers\n                        currentUser={currentUser}\n                        userData={userData}\n                        formation={formation}\n                        patchCurrentUser={patchCurrentUser}\n                        patchUser={patchUser}\n                    />\n                </Route> \n            );\n        });\n\n        const formationInfo = currentUser.formations.map((formation) => {\n            return (\n                <Route key={`${formation.id}info`} path={`/formations/${formation.id}/info`}>\n                    <FormationInfo currentUser={currentUser} formation={formation} token={token} patchCurrentUser={patchCurrentUser} />\n                </Route> \n            );\n        });\n\n        const formationSettings = currentUser.formations.map((formation) => {\n            return (\n                <Route key={`${formation.id}settings`} path={`/formations/${formation.id}/settings`}>\n                    <FormationSettings currentUser={currentUser} formation={formation} patchCurrentUser={patchCurrentUser} updateCurrentUser={updateCurrentUser} userData={userData} updateUserData={updateUserData} />\n                </Route> \n            );\n        });\n\n        const formationRequests = currentUser.formations.map((formation) => {\n            return (\n                <Route key={`${formation.id}requests`} path={`/formations/${formation.id}/requests`}>\n                    <FormationRequests currentUser={currentUser} formation={formation} patchCurrentUser={patchCurrentUser} updateCurrentUser={updateCurrentUser} />\n                </Route> \n            );\n        });\n\n        function getSearchValue(mode, value) {\n            setSearchValue(value);\n            if (mode === \"formation\") {\n                return history.push(\"/formations\");\n            } else if (mode === \"user\") {\n                return history.push(\"/formations/users\")\n            }\n        };\n    \n        return (\n            <div className=\"display-container\">\n                <h1>Formations</h1>\n                <FormationBar getSearchValue={getSearchValue} />\n                <Switch>\n                    <Route path=\"/formations/invitations\">\n                        <Invitations\n                            currentUser={currentUser}\n                            rejectInvitation={rejectInvitation}\n                            acceptInvitation={acceptInvitation}\n                        />\n                    </Route>\n                    <Route path=\"/formations/newformation\">\n                        <NewFormation\n                            currentUser={currentUser}\n                            patchCurrentUser={patchCurrentUser}\n                            updateCurrentUser={updateCurrentUser}\n                            userData={userData}\n                        />\n                    </Route>\n                    <Route path=\"/formations/users\">\n                        <Users\n                            userData={userData}\n                            currentUser={currentUser}\n                            searchValue={searchValue}\n                            sendInvite={sendInvite}\n                            sendRequest={sendRequest}\n                        />\n                    </Route>\n                    {formationUsers}\n                    {formationInfo}\n                    {formationRequests}\n                    {formationSettings}\n                    <Route path=\"/formations\">\n                        <MyFormations\n                            currentUser={currentUser}\n                            searchValue={searchValue}\n                            userData={userData}\n                            patchCurrentUser={patchCurrentUser}\n                            isLoaded={isLoaded}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    } else if (token === \"invalid\") {\n        return <Redirect to=\"/login\" />;\n    } else {\n        return <h1>Loading...</h1>;\n    }};\n\nexport default Formations;"],"mappings":"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"},"metadata":{},"sourceType":"module"}